import{_ as a,c as e,o as t,ag as o}from"./chunks/framework.Bw-5EFTY.js";const k=JSON.parse('{"title":"xsocks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/xsocks.md","filePath":"docs/rules/xsocks.md"}'),c={name:"docs/rules/xsocks.md"};function l(r,s,i,n,d,p){return t(),e("div",null,s[0]||(s[0]=[o('<h1 id="xsocks" tabindex="-1">xsocks <a class="header-anchor" href="#xsocks" aria-label="Permalink to &quot;xsocks&quot;">​</a></h1><p>xsocks 是 <a href="./socks.html">socks</a> 规则的穿透版本，主要区别在于跟目标代理建立连接失败时的处理方式：</p><ul><li>✅ 建立连接成功时：与 <a href="./socks.html">socks</a> 规则行为一致</li><li>❌ 建立连接失败时：忽略该匹配规则，继续正常网络请求（而 <a href="./socks.html">socks</a> 中断请求）</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xsocks://value [filters...]</span></span></code></pre></div><p>详细用法参考：<a href="./socks.html">socks</a></p>',6)]))}const _=a(c,[["render",l]]);export{k as __pageData,_ as default};
