import{_ as a,c as i,o as t,ae as n}from"./chunks/framework.Dgg8-8ov.js";const o=JSON.parse('{"title":"sniCallback","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/sniCallback.md","filePath":"docs/rules/sniCallback.md"}'),e={name:"docs/rules/sniCallback.md"};function l(p,s,h,k,d,r){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="snicallback" tabindex="-1">sniCallback <a class="header-anchor" href="#snicallback" aria-label="Permalink to &quot;sniCallback&quot;">​</a></h1><p>通过插件机制动态定制 HTTPS 请求的 TLS 证书。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern sniCallback://plugin-name(sniValue) [filters...]</span></span></code></pre></div><blockquote><p><code>(sniValue)</code> 可选，在插件 Hook 可以通过 <code>req.originalReq.sniValue</code> 获取</p></blockquote><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>plugin-name(sniValue)</td><td>插件名称 + 可选参数</td><td></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>wwww.example.com sniCallback://test</span></span>
<span class="line"><span>wwww.example.com sniCallback://test-sni(abc)</span></span></code></pre></div><p>在插件中通过以下属性访问 SNI 信息：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sniValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">servername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.originalReq; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取配置参数及 servername</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cert: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 证书内容 */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 私钥内容 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>具体用法参考：<a href="./../extensions/dev.html#snicallback">插件开发文档</a></p>`,11)]))}const E=a(e,[["render",l]]);export{o as __pageData,E as default};
