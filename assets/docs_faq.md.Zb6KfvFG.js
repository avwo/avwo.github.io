import{_ as s,c as e,o as a,ag as t}from"./chunks/framework.Bw-5EFTY.js";const k=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"docs/faq.md","filePath":"docs/faq.md"}'),l={name:"docs/faq.md"};function h(n,i,r,o,p,d){return a(),e("div",null,i[0]||(i[0]=[t(`<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h1><p>遇到问题或建议请提 <a href="https://github.com/avwo/whistle/issues/new" target="_blank" rel="noreferrer">issue</a></p><h2 id="capture-error" tabindex="-1">Q：抓包列表中出现 <code>captureError</code> 的原因？ <a class="header-anchor" href="#capture-error" aria-label="Permalink to &quot;Q：抓包列表中出现 \`captureError\` 的原因？{#capture-error}&quot;">​</a></h2><ol><li>发出请求的客户端没有安装根证书，安装方法参考： <ul><li>PC 端：<a href="./">安装根证书</a></li><li>移动端：<a href="./mobile.html">安装根证书</a></li></ul></li><li><code>ssl pinning</code> 问题 <ul><li>对该域名的 HTTPS 请求不解密：<code>域名 disable://capture</code> 或只针对指定客户端的请求 <code>域名 disable://capture includeFilter://reqH.user-agent=/xiaomi/i</code></li><li>使用可以规避 <code>ssl pinning</code> 的系统或模拟器运行客户端</li><li>寻找其它规避措施 <a href="https://blog.csdn.net/chiehfeng/article/details/134033846" target="_blank" rel="noreferrer">https://blog.csdn.net/chiehfeng/article/details/134033846</a></li></ul></li><li>系统信任的根证书默认对 Firefox 无效，需要单独为 Firefox 配置证书</li></ol><blockquote><p><strong>方案1：为 Firefox 单独安装证书</strong></p><p>在 Firefox 设置中：</p><ul><li>进入 选项 &gt; 隐私与安全 &gt; 证书</li><li>点击 &quot;查看证书&quot; → &quot;证书机构&quot;</li><li>导入下载的 .cer 文件</li><li>勾选 &quot;信任此CA&quot; 所有选项</li></ul><p><strong>方案2：强制 Firefox 使用系统证书（推荐）</strong></p><ul><li>搜索首选项：security.enterprise_roots.enabled</li><li>将值改为 true</li><li>重启浏览器生效</li></ul></blockquote><h2 id="q-如何配置双向认证-mtls-的-https-请求" tabindex="-1">Q：如何配置双向认证（mTLS）的 HTTPS 请求？ <a class="header-anchor" href="#q-如何配置双向认证-mtls-的-https-请求" aria-label="Permalink to &quot;Q：如何配置双向认证（mTLS）的 HTTPS 请求？&quot;">​</a></h2><p>客户端证书设置参考：<a href="./rules/@.html">@clientCert://</a></p><h2 id="q-如何查看-whistle-运行过程中的日志" tabindex="-1">Q：如何查看 Whistle 运行过程中的日志？ <a class="header-anchor" href="#q-如何查看-whistle-运行过程中的日志" aria-label="Permalink to &quot;Q：如何查看 Whistle 运行过程中的日志？&quot;">​</a></h2><ol><li>界面 Network &gt; Tools &gt; Server 查看错误日志</li><li>导致进程 Crash 的异常日志文件：<code>~/.WhistleAppData/whistle.log</code></li></ol><h2 id="q-如何同时启多个-whistle-实例" tabindex="-1">Q：如何同时启多个 Whistle 实例？ <a class="header-anchor" href="#q-如何同时启多个-whistle-实例" aria-label="Permalink to &quot;Q：如何同时启多个 Whistle 实例？&quot;">​</a></h2><p>多实例运行时需满足：</p><ul><li>每个实例使用独立目录</li><li>配置不同监听端口</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">w2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8100</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storageName2</span></span></code></pre></div><h2 id="q-普通请求如何不通过代理直接访问-whistle-不被当成内部请求" tabindex="-1">Q：普通请求如何不通过代理直接访问 Whistle 不被当成内部请求？ <a class="header-anchor" href="#q-普通请求如何不通过代理直接访问-whistle-不被当成内部请求" aria-label="Permalink to &quot;Q：普通请求如何不通过代理直接访问 Whistle 不被当成内部请求？&quot;">​</a></h2><p>Whistle 默认会将所有发往代理端口（如 127.0.0.1:8899）的请求视为内部管理请求，可以使用 <code>/-/</code> 路径前缀绕过内部请求识别，如：</p><ol><li><code>http://127.0.0.1:8899/-/xxx</code>：Whistle 自动转成普通请求 <code>http://127.0.0.1:8899/xxx</code></li><li>通过配置规则将该请求转发到目标 URL：<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://127.0.0.1:8899/xxx https://www.test.com/xxx</span></span></code></pre></div></li></ol><h2 id="q-rules-如何支持多选" tabindex="-1">Q：Rules 如何支持多选？ <a class="header-anchor" href="#q-rules-如何支持多选" aria-label="Permalink to &quot;Q：Rules 如何支持多选？&quot;">​</a></h2><p>在 Rules 界面中打开 Settings 对话框，勾选 <code>Use multiple rules</code> 即可</p><h2 id="q-如何根据请求内容匹配规则" tabindex="-1">Q：如何根据请求内容匹配规则？ <a class="header-anchor" href="#q-如何根据请求内容匹配规则" aria-label="Permalink to &quot;Q：如何根据请求内容匹配规则？&quot;">​</a></h2><p>利用过滤器：</p><ul><li><a href="./rules/includeFilter.html">includeFilter</a></li><li><a href="./rules/excludeFilter.html">excludeFilter</a></li></ul><h2 id="q-ios-安装完根证书还是无法打开-https-页面的可能原因" tabindex="-1">Q：iOS 安装完根证书还是无法打开 HTTPS 页面的可能原因？ <a class="header-anchor" href="#q-ios-安装完根证书还是无法打开-https-页面的可能原因" aria-label="Permalink to &quot;Q：iOS 安装完根证书还是无法打开 HTTPS 页面的可能原因？&quot;">​</a></h2><p>检查是否完成&quot;完全信任&quot;设置：设置 → 通用 → 关于本机 → 证书信任设置</p><h2 id="q-android-安装完根证书还是无法打开-https-页面的可能原因" tabindex="-1">Q：Android 安装完根证书还是无法打开 HTTPS 页面的可能原因？ <a class="header-anchor" href="#q-android-安装完根证书还是无法打开-https-页面的可能原因" aria-label="Permalink to &quot;Q：Android 安装完根证书还是无法打开 HTTPS 页面的可能原因？&quot;">​</a></h2><ol><li><code>ssl pinning</code> 问题 <ul><li>对该域名的 HTTPS 请求不解密：<code>域名 disable://capture</code> 或只针对指定客户端的请求 <code>域名 disable://capture includeFilter://reqH.user-agent=/xiaomi/i</code></li><li>使用可以规避 <code>ssl pinning</code> 的系统或模拟器运行客户端</li><li>寻找其它规避措施 <a href="https://blog.csdn.net/chiehfeng/article/details/134033846" target="_blank" rel="noreferrer">https://blog.csdn.net/chiehfeng/article/details/134033846</a></li></ul></li><li>如果是自己公司的 APP，可以参考<a href="https://developer.android.com/training/articles/security-config#base-config" target="_blank" rel="noreferrer">Android 开发文档</a> 开启信任用户自定义根证书</li></ol><h2 id="q-如何对-whistle-转发的请求设置用户名和密码" tabindex="-1">Q：如何对 Whistle 转发的请求设置用户名和密码？ <a class="header-anchor" href="#q-如何对-whistle-转发的请求设置用户名和密码" aria-label="Permalink to &quot;Q：如何对 Whistle 转发的请求设置用户名和密码？&quot;">​</a></h2><ol><li>Whistle 内部请求认证：<code>w2 start -n 用户名 -w 密码</code> 或自己<a href="./extensions/dev.html">开发插件</a>，防止未授权操作规则和配置</li><li>代理请求的权限控制：需要借助插件 <a href="https://github.com/whistle-plugins/whistle.proxyauth" target="_blank" rel="noreferrer">whistle.proxyauth</a> 或自己<a href="./extensions/dev.html">开发插件</a></li></ol><h2 id="custom-certs" tabindex="-1">Q：如何添加自定义证书？ <a class="header-anchor" href="#custom-certs" aria-label="Permalink to &quot;Q：如何添加自定义证书？{#custom-certs}&quot;">​</a></h2><p>进入证书管理页面</p><ol><li>点击顶部菜单栏 HTTPS &gt; View Custom Certs &gt; Upload</li><li>上传证书文件 <ul><li>证书文件：必须使用 <code>.crt</code> 后缀</li><li>私钥文件：必须使用 <code>.key</code> 后缀</li></ul><blockquote><p>文件名要求：</p><p>普通域名证书</p><p><code>example.com.crt</code> ↔ <code>example.com.key</code></p><p>根证书（必须严格命名）</p><p><code>root.crt</code> ↔ <code>root.key</code></p></blockquote></li></ol><h2 id="update" tabindex="-1">Q：版本更新问题 <a class="header-anchor" href="#update" aria-label="Permalink to &quot;Q：版本更新问题{#update}&quot;">​</a></h2><blockquote><p>客户端版本只需重新下载最新版本并安装即可：<a href="https://github.com/avwo/whistle-client" target="_blank" rel="noreferrer">https://github.com/avwo/whistle-client</a></p></blockquote><p><strong>命令行版本更新：</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> whistle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">w2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span></span></code></pre></div><blockquote><p>遇到安装慢或安装失败的问题可以尝试改镜像：<code>npm i -g whistle --registry=https://registry.npmmirror.com &amp;&amp; w2 restart</code></p><p>遇到权限问题可以加 <code>sudo</code>：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> whistle</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">w2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span></span></code></pre></div></blockquote><p>重启后命令行显示的 Whistle 版本与当前安装版本不符，可能是 Node.js 版本更新导致 PATH 路径变更。</p><p><strong>解决方法：</strong></p><ol><li>确认版本是否有问题：<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">w2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -V</span></span></code></pre></div></li><li>找命令路径（所有系统通用）<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> w2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Linux/Mac</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> w2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Windows</span></span></code></pre></div></li><li>清理冲突<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除旧版本（根据上一步找到的路径）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/w2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 示例路径</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows示例（需管理员权限）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">del</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;C:\\Program Files\\nodejs\\w2.cmd&quot;</span></span></code></pre></div></li><li>恢复运行，操作完成后执行 <code>w2 -V</code> 查看版本是否更新： <ul><li>如果输出的版本还有问题重复上述操作</li><li>如果命令 <code>w2</code> 找不到，请手动配置 PATH</li></ul></li></ol><h2 id="q-如何过滤抓包界面中的频繁轮询请求" tabindex="-1">Q：如何过滤抓包界面中的频繁轮询请求？ <a class="header-anchor" href="#q-如何过滤抓包界面中的频繁轮询请求" aria-label="Permalink to &quot;Q：如何过滤抓包界面中的频繁轮询请求？&quot;">​</a></h2><p>频繁的轮询请求（如心跳检测、状态上报）会刷屏并干扰主要请求的分析。您可以通过以下步骤快速隐藏它们：</p><p>在抓包列表中找到任意一个轮询请求，右键菜单选择合适的过滤规则：</p><ul><li><code>Settings / Exclude All Matching Hosts</code>：隐藏所有来自对应域名的请求（只对当前浏览器生效）</li><li><code>Settings / Exclude All Matching URLs</code>：隐藏与当前 URL 匹配的所有请求（不包含请求参数，且只对当前浏览器生效）</li></ul><h2 id="q-如何修改-whistle-文档" tabindex="-1">Q：如何修改 Whistle 文档？ <a class="header-anchor" href="#q-如何修改-whistle-文档" aria-label="Permalink to &quot;Q：如何修改 Whistle 文档？&quot;">​</a></h2><p>Whistle 文档源文件地址：<a href="https://github.com/avwo/whistle/tree/master/docs" target="_blank" rel="noreferrer">https://github.com/avwo/whistle/tree/master/docs</a></p><p>本地启动文档服务：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span></code></pre></div><h2 id="q-如何反馈问题" tabindex="-1">Q：如何反馈问题？ <a class="header-anchor" href="#q-如何反馈问题" aria-label="Permalink to &quot;Q：如何反馈问题？&quot;">​</a></h2><p>New issue：<a href="https://github.com/avwo/whistle/issues" target="_blank" rel="noreferrer">https://github.com/avwo/whistle/issues</a></p>`,48)]))}const u=s(l,[["render",h]]);export{k as __pageData,u as default};
