import{_ as t,c as a,o as s,ag as o}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"host","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/host.md","filePath":"en/docs/rules/host.md"}'),n={name:"en/docs/rules/host.md"};function i(r,e,l,c,p,d){return s(),a("div",null,e[0]||(e[0]=[o(`<h1 id="host" tabindex="-1">host <a class="header-anchor" href="#host" aria-label="Permalink to &quot;host&quot;">​</a></h1><p>This command modifies the DNS resolution result of a request, resolving the specified request to a specific IP address (domain name) and port. This can be considered the ultimate system hosts configuration feature.</p><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern host://ipOrDomain[:port] [filters...]</span></span></code></pre></div><blockquote><p>If <code>port</code> is left blank, the original port of the request URL will be used. If it points to a domain name, it functions like <code>cname</code>.</p></blockquote><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>Expression to match the request URL</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td>IP + optional port or domain name + optional port<br>⚠️ Loading data from files/remote URLs is not supported</td><td><a href="./operation.html">Operation Instruction Documentation</a></td></tr><tr><td>filters</td><td>Optional filters, supporting matching:<br>• Request URL/Method/Headers/Content<br>• Response Status Code/Headers</td><td><a href="./filters.html">Filters Documentation</a></td></tr></tbody></table><h2 id="configuration-example" tabindex="-1">Configuration Example <a class="header-anchor" href="#configuration-example" aria-label="Permalink to &quot;Configuration Example&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Can be omitted if only the IP or port is specified \`host://\`</span></span>
<span class="line"><span>www.example.com/test0 127.0.0.1 # Do not change the port; use the original port in the request URL.</span></span>
<span class="line"><span>www.example.com/test1 127.0.0.1:5173</span></span>
<span class="line"><span></span></span>
<span class="line"><span># CNAME functionality</span></span>
<span class="line"><span>www.example.com/test2 host://www.test.com</span></span>
<span class="line"><span>www.example.com/test3 host://www.test.com:8080</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Advanced configuration: Get the target address from the request parameters. IncludeFilter ensures the parameter exists.</span></span>
<span class="line"><span>www.example.com/test4 host://\`\${query.target}$:8080\` includeFilter:///[?&amp;]target=[\\w-]+/i</span></span></code></pre></div><h2 id="matching-precedence-with-proxy" tabindex="-1">Matching precedence with proxy <a class="header-anchor" href="#matching-precedence-with-proxy" aria-label="Permalink to &quot;Matching precedence with proxy&quot;">​</a></h2><p>The following is an optimized document with clearer structure and more concise and accurate language:</p><hr><h2 id="matching-precedence-with-host" tabindex="-1">Matching precedence with host <a class="header-anchor" href="#matching-precedence-with-host" aria-label="Permalink to &quot;Matching precedence with host&quot;">​</a></h2><h4 id="default-behavior" tabindex="-1">Default behavior <a class="header-anchor" href="#default-behavior" aria-label="Permalink to &quot;Default behavior&quot;">​</a></h4><p>When a request matches both <code>host</code> and <code>proxy</code> When configuring rules:</p><ul><li>Only <code>host</code> rules take effect</li><li><code>proxy</code> rules are automatically ignored</li></ul><h4 id="changing-priority" tabindex="-1">Changing Priority <a class="header-anchor" href="#changing-priority" aria-label="Permalink to &quot;Changing Priority&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Configuration Method</th><th>Syntax</th><th>Effect</th></tr></thead><tbody><tr><td><strong>Prioritize proxy</strong></td><td><a href="./enable.html"><code>enable://proxyFirst</code></a> or <a href="./lineProps.html"><code>lineProps://proxyFirst</code></a></td><td>Only <code>proxy</code> takes effect (overrides <code>host</code>)</td></tr><tr><td><strong>Both take effect</strong></td><td><a href="./enable.html"><code>enable://proxyHost</code></a> or <a href="./lineProps.html"><code>lineProps://proxyHost</code></a></td><td>Both <code>proxy</code> and <code>host</code> take effect</td></tr></tbody></table><h4 id="usage-recommendations" tabindex="-1">Usage Recommendations <a class="header-anchor" href="#usage-recommendations" aria-label="Permalink to &quot;Usage Recommendations&quot;">​</a></h4><ul><li>Use the default behavior in most scenarios</li><li>Use <code>proxyFirst</code> only when special proxy logic is required</li><li>Use <code>proxyHost</code> when dual matching is required</li></ul><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><p>The <code>host</code> protocol only applies to the substituted URL (i.e., the <code>Final URL</code> shown in the Overview). If the <code>Final URL</code> is empty, it will take effect on the original request URL.</p><p>For example, with the rule:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/api www.example.com 127.0.0.1:1234</span></span></code></pre></div><p>A request to <code>https://www.example.com/api/path</code> will be processed by Whistle, and the <code>Final URL</code> becomes <code>https://www.example.com/path</code>. As a result, it will not match <code>127.0.0.1:1234</code>.</p><p>If you want to match the substituted request, you can modify the rules as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/api www.example.com  </span></span>
<span class="line"><span>www.example.com 127.0.0.1:1234</span></span></code></pre></div><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><ol><li>Differences from URL conversion:<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># The URL received by the server is still www.example.com</span></span>
<span class="line"><span>www.example.com 127.0.0.1:5173</span></span>
<span class="line"><span></span></span>
<span class="line"><span># The URL received by the server is http://127.0.0.1:5173</span></span>
<span class="line"><span>www.example.com http://127.0.0.1:5173</span></span></code></pre></div></li><li>Automatic downgrade to HTTP requests: If the configured target IP is <code>127.0.0.1</code> and HTTPS requests report errors, they will automatically downgrade to HTTP requests to facilitate access to local services. Users can disable this feature using the following rule:<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Disable automatic downgrade of local HTTPS requests</span></span>
<span class="line"><span>pattern disable://auto2http</span></span></code></pre></div></li></ol>`,28)]))}const m=t(n,[["render",i]]);export{u as __pageData,m as default};
