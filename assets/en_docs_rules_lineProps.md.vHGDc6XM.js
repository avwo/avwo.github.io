import{_ as t,c as s,o as a,ag as i}from"./chunks/framework.Bw-5EFTY.js";const m=JSON.parse('{"title":"lineProps","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/lineProps.md","filePath":"en/docs/rules/lineProps.md"}'),n={name:"en/docs/rules/lineProps.md"};function o(l,e,p,r,c,h){return a(),s("div",null,e[0]||(e[0]=[i(`<h1 id="lineprops" tabindex="-1">lineProps <a class="header-anchor" href="#lineprops" aria-label="Permalink to &quot;lineProps&quot;">â€‹</a></h1><p>Enable features such as proxyHost, proxyTunnel, and safeHtml through rules.</p><blockquote><p>ðŸ“Œ Differences from <a href="./enable.html">enable</a>:</p><p><code>enable</code> is a global configuration.</p><p><code>lineProps</code> only applies to the rule on the line where the configuration is located.</p></blockquote><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">â€‹</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern operation lineProps://action1|action2|... [filters...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Equivalent to:</span></span>
<span class="line"><span>pattern operation lineProps://action1 lineProps://action2 ... [filters...]</span></span></code></pre></div><blockquote><p><code>lineProps</code> cannot be used as an <code>operation</code> alone and only applies to the <code>operation</code> on the same line.</p></blockquote><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>Expression to match the request URL</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>operation</td><td>Operation Instructions</td><td><a href="./operation.html">Operation Instruction Documentation</a></td></tr><tr><td>action</td><td>Specific actions, see the description below</td><td></td></tr><tr><td>filters</td><td>Optional filters, supporting matching: â€¢ Request URL/Method/Header/Content â€¢ Response Status Code/Header</td><td><a href="./filters.html">Filter Documentation</a></td></tr></tbody></table><ul><li><code>important</code>: <code>!important</code> of type css attribute, increasing rule priority</li><li><code>safeHtml</code>: This is a security protection mechanism. When injecting content into an HTML page using <code>htmlXxx</code>/<code>jsXxx</code>/<code>cssXxx</code>, the first non-whitespace character in the response is checked to see if it is a <code>{</code> or a <code>[</code> (the opening character of a JSON object). Injection is performed only if it is not. This effectively prevents accidental injection of non-standard HTML responses (such as JSON endpoints).</li><li><code>strictHtml</code>: This is a security protection mechanism. When injecting content into an HTML page using <code>htmlXxx</code>/<code>jsXxx</code>/<code>cssXxx</code>, the first non-whitespace character in the response is checked to see if it is a <code>&lt;</code>. Injection is performed only if it is not. This effectively prevents accidental injection of non-standard HTML responses (such as JSON endpoints).</li><li><code>disableAutoCors</code>: Disables automatic addition of necessary CORS (Cross-Origin Resource Sharing) headers for <a href="./file.html">file</a> protocol substitution requests.</li><li><code>disableUserLogin</code>: Disables displaying the login dialog when setting <a href="./statusCode.html">statusCode://401</a>.</li><li><code>enableUserLogin</code>: Enables displaying the login dialog when setting <a href="./statusCode.html">statusCode://401</a>. (Shown by default, disables <code>disable.userLogin</code>).</li><li><code>internal</code>: Applies <code>proxy</code>, <code>socks</code>, and <code>host</code> protocol drop rules to Whistle internal requests.</li><li><code>internalOnly</code>: Applies <code>proxy</code>, <code>socks</code>, and <code>host</code> protocol drop rules to Whistle internal requests only.</li><li><code>internalProxy</code>: Uses proxy protocols like <code>proxy</code> and <code>socks</code> to forward requests to another proxy server (such as another Whistle proxy server). When this feature is enabled, HTTPS requests decrypted by the first-tier proxy will be transmitted in plaintext throughout the proxy chain, allowing upstream proxies to directly access the plaintext data.</li><li><code>proxyFirst</code>: give priority to the <a href="./proxy.html">proxy</a> rule (by default, both <code>host</code> and <code>proxy</code> are matched, and only <code>host</code> takes effect)</li><li><code>proxyHost</code>: Both the <a href="./proxy.html">proxy</a> and <a href="./host.html">host</a> rules take effect.</li><li><code>proxyHostOnly</code>: Functions similarly to <code>proxyHost</code>, but if no <a href="./host.html">host</a> matches, the <a href="./proxy.html">proxy</a> rule will be automatically disabled.</li><li><code>proxyTunnel</code>: Used with <code>proxyHost</code>, it allows the upstream proxy to tunnel to the upstream HTTP proxy. See the example below for details.</li><li><code>weakRule</code>: By default, the <code>weakRule</code> rule will be disabled when protocols such as <code>file](./file) are configured. By setting the </code>weakRule<code>property, you can increase the priority of the</code>proxy\` (./proxy) rule, ensuring it still works in the above scenario.</li></ul><h2 id="configuration-example" tabindex="-1">Configuration Example <a class="header-anchor" href="#configuration-example" aria-label="Permalink to &quot;Configuration Example&quot;">â€‹</a></h2><h4 id="without-lineprops-important" tabindex="-1">Without <code>lineProps://important</code> <a class="header-anchor" href="#without-lineprops-important" aria-label="Permalink to &quot;Without \`lineProps://important\`&quot;">â€‹</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file:///User/xxx/important1.html</span></span>
<span class="line"><span>www.example.com/path file:///User/xxx/important2.html</span></span></code></pre></div><p>Accessing <code>https://www.example.com/path</code> will match <code>file:///User/xxx/important1.html</code></p><h4 id="using-lineprops-important" tabindex="-1">Using <code>lineProps://important</code> <a class="header-anchor" href="#using-lineprops-important" aria-label="Permalink to &quot;Using \`lineProps://important\`&quot;">â€‹</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file:///User/xxx/important1.html</span></span>
<span class="line"><span>www.example.com/path file:///User/xxx/important2.html lineProps://important</span></span></code></pre></div><p>Accessing <code>https://www.example.com/path</code> will match <code>file:///User/xxx/important2.html</code></p><h4 id="inject-text" tabindex="-1">Inject text <a class="header-anchor" href="#inject-text" aria-label="Permalink to &quot;Inject text&quot;">â€‹</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://(test) resType://html</span></span>
<span class="line"><span>www.example.com/path htmlPrepend://(alert(1))</span></span>
<span class="line"><span>www.example.com/path jsPrepend://(alert(1))</span></span>
<span class="line"><span>www.example.com/path cssPrepend://(alert(1))</span></span></code></pre></div><p>Visit <code>https://www.example.com/path</code> and return the response content:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;alert(1)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alert(1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;test</span></span></code></pre></div><h4 id="use-enable-stricthtml" tabindex="-1">Use <code>enable://strictHtml</code> <a class="header-anchor" href="#use-enable-stricthtml" aria-label="Permalink to &quot;Use \`enable://strictHtml\`&quot;">â€‹</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://(test) resType://html</span></span>
<span class="line"><span>www.example.com/path htmlPrepend://(alert(1))</span></span>
<span class="line"><span>www.example.com/path jsPrepend://(alert(1)) enable://strictHtml</span></span>
<span class="line"><span>www.example.com/path cssPrepend://(alert(1))</span></span></code></pre></div><p>Visit <code>https://www.example.com/path</code> and return the response content:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span></span></code></pre></div><blockquote><p><code>enable://strictHtml</code> is effective for all rules</p></blockquote><h3 id="use-lineprops-stricthtml" tabindex="-1">Use <code>lineProps://strictHtml</code> <a class="header-anchor" href="#use-lineprops-stricthtml" aria-label="Permalink to &quot;Use \`lineProps://strictHtml\`&quot;">â€‹</a></h3><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://(test) resType://html</span></span>
<span class="line"><span>www.example.com/path htmlPrepend://(alert(1))</span></span>
<span class="line"><span>www.example.com/path jsPrepend://(alert(1)) lineProps://strictHtml</span></span>
<span class="line"><span>www.example.com/path cssPrepend://(alert(1))</span></span></code></pre></div><p>Visit <code>https://www.example.com/path</code> Return response content:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;alert(1)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alert(1)test</span></span></code></pre></div><blockquote><p><code>lineProps://strictHtml</code> only applies to the line where the rule is located</p></blockquote>`,29)]))}const u=t(n,[["render",o]]);export{m as __pageData,u as default};
