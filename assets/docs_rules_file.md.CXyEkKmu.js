import{_ as s,c as e,o as t,ae as n}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"file","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/file.md","filePath":"docs/rules/file.md"}'),l={name:"docs/rules/file.md"};function p(i,a,o,c,d,h){return t(),e("div",null,a[0]||(a[0]=[n(`<h1 id="file" tabindex="-1">file <a class="header-anchor" href="#file" aria-label="Permalink to &quot;file&quot;">​</a></h1><p>使用本地文件响应请求，适用于：</p><ul><li>搭建本地开发环境</li><li>调试本地前端页面</li><li>接口 Mock 场景</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern file://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>操作内容，支持以下类型：<br>• 目录/文件路径<br>• 远程 URL<br>• 内联/内嵌/Values内容</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="替换本地文件" tabindex="-1">替换本地文件 <a class="header-anchor" href="#替换本地文件" aria-label="Permalink to &quot;替换本地文件&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 基础用法</span></span>
<span class="line"><span>www.example.com/path file:///User/xxx/test</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Windows 路径</span></span>
<span class="line"><span>www.example.com/path file://D:\\test </span></span>
<span class="line"><span></span></span>
<span class="line"><span># 排除特定接口</span></span>
<span class="line"><span>www.example.com/path file:///User/xxx/test excludeFilter://*/path/cgi</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 根据请求内容匹配</span></span>
<span class="line"><span>www.example.com/path file:///User/xxx/test includeFilter://b:/&quot;cmdname&quot;:\\s*&quot;test&quot;/i</span></span></code></pre></div><p><strong>特性说明：</strong></p><ul><li>自动路径拼接：访问 <code>https://www.example.com/path/x/y/z</code> 会映射到 <code>/User/xxx/test/x/y/z</code></li><li>禁用路径拼接：使用 <code>&lt; &gt;</code> 包裹路径<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://&lt;/User/xxx/test&gt;</span></span></code></pre></div><blockquote><p>访问 <code>https://www.example.com/path/x/y/z</code> 只会自动加载 <code>/User/xxx/test</code> 对应的文件</p></blockquote></li></ul><h2 id="快速替换" tabindex="-1">快速替换 <a class="header-anchor" href="#快速替换" aria-label="Permalink to &quot;快速替换&quot;">​</a></h2><p>如果不方便操作本地文件，也可以用 Whistle 提供的内联/内嵌/Values功能，通过界面设置响应内容：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 内联值不能有空格</span></span>
<span class="line"><span>www.example.com/path file://({&quot;ec&quot;:0})</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 内嵌值（可以带空格和换行符）</span></span>
<span class="line"><span>\`\`\` test.json</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;ec&quot;: 2,</span></span>
<span class="line"><span>  &quot;em&quot;: &quot;error&quot;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>www.example.com/path file://{test.json}</span></span></code></pre></div><blockquote><p><code>test.json</code> 如果内容比较多可以放在 Values 里面</p></blockquote><h2 id="替换临时文件" tabindex="-1">替换临时文件 <a class="header-anchor" href="#替换临时文件" aria-label="Permalink to &quot;替换临时文件&quot;">​</a></h2><p>如果内容比较大，且又不方便操作本地文件，可以用 Whistle 提供的临时文件功能：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://temp/blank.html</span></span></code></pre></div><p><strong>操作步骤：</strong></p><ol><li>按住 <code>Command(Mac)</code>/<code>Ctrl(Win)</code></li><li>点击规则中的 <code>file://temp/blank.html</code></li><li>在弹出编辑器中输入响应内容</li></ol><h2 id="mock-jsonp" tabindex="-1">Mock JSONP <a class="header-anchor" href="#mock-jsonp" aria-label="Permalink to &quot;Mock JSONP&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://\`(\${query.callback}({&quot;ec&quot;:0}))\` # 内联值不能有空格</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 内嵌值（可以带空格和换行符）</span></span>
<span class="line"><span>\`\`\` test.json</span></span>
<span class="line"><span>\${query.callback}({</span></span>
<span class="line"><span>  &quot;ec&quot;: 2,</span></span>
<span class="line"><span>  &quot;em&quot;: &quot;error&quot;</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>www.example.com/path file://\`{test.json}\`</span></span></code></pre></div><p>模板字符串在以下场景中无法直接生效：</p><ul><li>引用本地文件路径时</li><li>引用远程 URL 地址时</li></ul><p>当遇到上述限制时，您可以使用 <a href="./tpl.html">tpl</a> 功能作为替代方案。</p><h2 id="高级用法" tabindex="-1">高级用法 <a class="header-anchor" href="#高级用法" aria-label="Permalink to &quot;高级用法&quot;">​</a></h2><p><strong>多目录搜索：</strong></p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file:///path1|/path2|/path3</span></span></code></pre></div><p><strong>查找逻辑：</strong></p><ol><li>按顺序检查 /path1/x/y/z → /path2/x/y/z → /path3/x/y/z</li><li>找到第一个存在的文件立即返回</li><li>全部未找到返回 <code>404</code></li></ol><h2 id="关联协议" tabindex="-1">关联协议 <a class="header-anchor" href="#关联协议" aria-label="Permalink to &quot;关联协议&quot;">​</a></h2><ol><li>需要允许未匹配文件的请求继续正常访问用：<a href="./xfile.html">xfile</a></li><li>需要用其它远程 URL 的内容替换用：<a href="./https.html">https</a> 或 <a href="./http.html">http</a> 或配 <a href="./host.html">host</a> （不建议用：<del><code>file://https://xxx</code></del>）</li></ol>`,31)]))}const m=s(l,[["render",p]]);export{u as __pageData,m as default};
