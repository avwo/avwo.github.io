import{_ as a,c as t,o as n,ae as e}from"./chunks/framework.Dgg8-8ov.js";const k=JSON.parse('{"title":"rawfile","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/rawfile.md","filePath":"en/docs/rules/rawfile.md"}'),i={name:"en/docs/rules/rawfile.md"};function l(p,s,o,r,h,d){return n(),t("div",null,s[0]||(s[0]=[e(`<h1 id="rawfile" tabindex="-1">rawfile <a class="header-anchor" href="#rawfile" aria-label="Permalink to &quot;rawfile&quot;">​</a></h1><p>rawfile is an enhanced version of <a href="./file.html">file</a>. In addition to supporting all the features of <a href="./file.html">file</a>, it also allows you to define a complete HTTP response in a file, including:</p><ul><li>Response status code</li><li>Response headers</li><li>Response content</li></ul><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern rawfile://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>Expression to match against the request URL</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td>Operation content. Supports the following types:<br>• Directory/File Path<br>• Remote URL<br>• Inline/Embedded/Values Content</td><td><a href="./operation.html">Operation Instruction Documentation</a></td></tr><tr><td>filters</td><td>Optional filters. Supports matching against:<br>• Request URL/Method/Headers/Content<br>• Response Status Code/Headers</td><td><a href="./filters.html">Filter Documentation</a></td></tr></tbody></table><h2 id="mock-interface" tabindex="-1">Mock Interface <a class="header-anchor" href="#mock-interface" aria-label="Permalink to &quot;Mock Interface&quot;">​</a></h2><ol><li>Local File <code>/User/xxx/raw.txt</code><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HTTP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 500</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> OK</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: application</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">json</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Custom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your content here&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li>Configure Rules<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.example.com/test/rawfile tpl:///User/xxx/raw.txt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Equivalent to</span></span>
<span class="line"><span># https://www.example.com/test/rawfile file:///User/xxx/test.json replaceStatus://500 resType://json resHeaders://x-custom-header=value</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Supports remote URLs</span></span>
<span class="line"><span># pattern rawfile://https://example.com/raw.json</span></span></code></pre></div></li><li>Request <code>https://www.example.com/test/rawfile</code> Returns:<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 状态码</span></span>
<span class="line"><span>500</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 响应头</span></span>
<span class="line"><span>content-type: application/json</span></span>
<span class="line"><span>x-custom-header: value</span></span>
<span class="line"><span>content-length: 56</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 响应内容</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;status&quot;: &quot;success&quot;,</span></span>
<span class="line"><span>  &quot;data&quot;: &quot;your content here&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div></li></ol><p>For other functions, see: <a href="./file.html">file</a></p>`,9)]))}const u=a(i,[["render",l]]);export{k as __pageData,u as default};
