import{_ as a,c as t,o as i,ag as e}from"./chunks/framework.Bw-5EFTY.js";const k=JSON.parse('{"title":"tlsOptions","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/cipher.md","filePath":"docs/rules/cipher.md"}'),n={name:"docs/rules/cipher.md"};function p(l,s,h,o,r,c){return i(),t("div",null,s[0]||(s[0]=[e(`<h1 id="tlsoptions" tabindex="-1">tlsOptions <a class="header-anchor" href="#tlsoptions" aria-label="Permalink to &quot;tlsOptions&quot;">​</a></h1><p>配置 HTTPS/TLS 连接的安全参数，用于建立加密通信通道和服务器身份验证。</p><blockquote><p>仅 Whistle 最新版本（≥ v2.9.101）支持此功能</p></blockquote><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern tlsOptions://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>操作数据对象或加密算法套件名称，支持从以下渠道获取：<br>• 目录/文件路径<br>• 远程 URL<br>• 内联/内嵌/Values内容</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><p>tlsOptions 操作对象结构：</p><ol><li>加密算法套件名称<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ECDHE-ECDSA-AES256-GCM-SHA384:DH-RSA-AES256-GCM-SHA384</span></span></code></pre></div><blockquote><p>多个套件用 <code>:</code> 分隔</p></blockquote></li><li><code>tls.connect(options)</code> 参数<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ciphers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  secureProtocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  maxVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  minVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  honorCipherOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: boolean</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ca</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  allowPartialTrustChain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  sessionIdContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  sigalgs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  dhparam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ecdhCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  secureOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  sessionTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 证书公共路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  passphrase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: pfx 类型证书的密钥内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pfx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 证书内容或本地u家</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>详见：<a href="https://nodejs.org/docs/latest/api/tls.html#tlscreatesecurecontextoptions" target="_blank" rel="noreferrer">https://nodejs.org/docs/latest/api/tls.html#tlscreatesecurecontextoptions</a></p></blockquote></li></ol><h2 id="自定义加密套件" tabindex="-1">自定义加密套件 <a class="header-anchor" href="#自定义加密套件" aria-label="Permalink to &quot;自定义加密套件&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path tlsOptions://ECDHE-ECDSA-AES256-GCM-SHA384:DH-RSA-AES256-GCM-SHA384</span></span></code></pre></div><blockquote><p>一般手动设置，用途参考：<a href="https://github.com/avwo/whistle/issues/963" target="_blank" rel="noreferrer">https://github.com/avwo/whistle/issues/963</a></p></blockquote><h2 id="配置客户端证书" tabindex="-1">配置客户端证书 <a class="header-anchor" href="#配置客户端证书" aria-label="Permalink to &quot;配置客户端证书&quot;">​</a></h2><p>为双向认证(mTLS)请求指定客户端证书。</p><ol><li>cert 格式证书<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.exaple.com/path tlsOptions://key=/User/xxx/test.key&amp;cert=/User/xxx/test.crt</span></span></code></pre></div></li><li>pem 格式证书<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.exaple.com/path tlsOptions://key=E:\\test.pem&amp;cert=E:\\test.pem</span></span></code></pre></div></li><li>pfx 格式证书<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.exaple.com/path tlsOptions://passphrase=123456&amp;pfx=/User/xxx/test.pfx</span></span></code></pre></div></li><li>p12 格式证书<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.exaple.com/path tlsOptions://passphrase=123456&amp;pfx=E:/test.p12</span></span></code></pre></div></li></ol><blockquote><p>Windows 路径可混用 <code>/</code> 和 <code>\\</code></p></blockquote><h2 id="内嵌证书内容" tabindex="-1">内嵌证书内容 <a class="header-anchor" href="#内嵌证书内容" aria-label="Permalink to &quot;内嵌证书内容&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 其它格式的证书同理</span></span>
<span class="line"><span>\`\`\` test.json</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  key: &#39;----xxx----- ... ----xxx-----&#39;,</span></span>
<span class="line"><span>  cert: &#39;----yyy----- ... ----yyy-----&#39;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>www.exaple.com/path tlsOptions://{test.json}</span></span></code></pre></div><h2 id="本地-远程资源" tabindex="-1">本地/远程资源 <a class="header-anchor" href="#本地-远程资源" aria-label="Permalink to &quot;本地/远程资源&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path1 tlsOptions:///User/xxx/test.json</span></span>
<span class="line"><span>www.example.com/path2 tlsOptions://https://www.xxx.com/xxx/params.json</span></span>
<span class="line"><span># 通过编辑临时文件</span></span>
<span class="line"><span>www.example.com/path3 tlsOptions://temp/blank.json</span></span></code></pre></div>`,19)]))}const g=a(n,[["render",p]]);export{k as __pageData,g as default};
