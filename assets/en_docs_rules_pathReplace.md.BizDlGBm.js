import{_ as a,c as t,o as s,ae as p}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"pathReplace","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/pathReplace.md","filePath":"en/docs/rules/pathReplace.md"}'),o={name:"en/docs/rules/pathReplace.md"};function n(l,e,i,c,r,d){return s(),t("div",null,e[0]||(e[0]=[p(`<h1 id="pathreplace" tabindex="-1">pathReplace <a class="header-anchor" href="#pathreplace" aria-label="Permalink to &quot;pathReplace&quot;">​</a></h1><p>Provides functionality similar to JavaScript&#39;s String.replace() method, dynamically modifying the path portion of a URL using regular expressions or string matching.</p><blockquote><p>URL structure:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.example.com:8080/path/to/resource?query=string</span></span>
<span class="line"><span>\\___/ \\_____________/\\____/\\____________________________/</span></span>
<span class="line"><span>|                 |           |           |</span></span>
<span class="line"><span>Protocol (scheme) Host (host) Port (path) Path (path)</span></span></code></pre></div><p>The <code>path</code> section refers to <code>path/to/resource?query=string</code>, which excludes the leading <code>/</code></p></blockquote><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern pathReplace://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>Expression to match request URLs</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td>Operation data object, supported from the following channels: <br>• Directory/file path<br>• Remote URL<br>• Inline/embedded/Values content</td><td><a href="./operation.html">Operation Instruction Documentation</a></td></tr><tr><td>filters</td><td>Optional filters, supporting matching: • Request URL/Method/Header/Content • Response Status Code/Header</td><td><a href="./filters.html">Filter Documentation</a></td></tr></tbody></table><h2 id="configuration-example" tabindex="-1">Configuration Example <a class="header-anchor" href="#configuration-example" aria-label="Permalink to &quot;Configuration Example&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path pathReplace://123=abc</span></span></code></pre></div><p>Visit <code>https://www.example.com/path/123?test=123&amp;value=123</code>. The server receives the following URL: <code>https://www.example.com/path/abc?test=abc&amp;value=abc</code></p><h4 id="replace-multiple-strings" tabindex="-1">Replace Multiple Strings <a class="header-anchor" href="#replace-multiple-strings" aria-label="Permalink to &quot;Replace Multiple Strings&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`\`\` test.json</span></span>
<span class="line"><span>test: name</span></span>
<span class="line"><span>123: abc</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>www.example.com/path2 pathReplace://{test.json}</span></span></code></pre></div><p>Visit <code>https://www.example.com/path2/123?test=123&amp;value=123</code>. The server receives the following URL: URL: <code>https://www.example.com/path2/abc?name=abc&amp;value=abc</code></p><h4 id="local-remote-resources" tabindex="-1">Local/Remote Resources <a class="header-anchor" href="#local-remote-resources" aria-label="Permalink to &quot;Local/Remote Resources&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path1 pathReplace:///User/xxx/test.json</span></span>
<span class="line"><span>www.example.com/path2 pathReplace://https://www.xxx.com/xxx/params.json</span></span>
<span class="line"><span># Editing a Temporary File</span></span>
<span class="line"><span>www.example.com/path3 pathReplace://temp/blank.json</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><p>The following configuration is intended to remove a specific path segment:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/api/ pathReplace://(/api/=/)</span></span></code></pre></div><p><strong>Expected outcome:</strong><br> Replace <code>/api/</code> in <code>https://www.example.com/api/xxx</code> with <code>/</code>, resulting in <code>https://www.example.com/xxx</code>.</p><p><strong>Actual issue:</strong><br> Whistle interprets <code>/api/</code> as a regular expression rather than a plain string, causing extra slashes to appear after replacement:<br><code>https://www.example.com///xxx</code>.</p><blockquote><p>Even if <code>/api/</code> is treated as a string, it cannot match <code>api/xxx/...</code>. The path matched by pathReplace does not contain the leading <code>/</code></p></blockquote><p><strong>Solution:</strong></p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com pathReplace://(/^api//=)</span></span></code></pre></div><blockquote><p>Regular expressions in Whistle rules do not require escaping <code>/</code>.</p><p>New versions of Whistle can also use <code>delete://pathname.0</code> to delete the <code>api/</code> path segment in the above URL. For details, see <a href="./delete.html">delete://pathname.xxx</a></p></blockquote><h2 id="related-protocols" tabindex="-1">Related Protocols <a class="header-anchor" href="#related-protocols" aria-label="Permalink to &quot;Related Protocols&quot;">​</a></h2><ol><li>Modify request parameters: <a href="./urlParams.html">urlParams</a></li><li>Delete the path: <a href="./delete.html">delete://pathname.xxx</a></li><li>Delete request parameters: <a href="./delete.html">delete://urlParams.xxx</a></li></ol>`,25)]))}const m=a(o,[["render",n]]);export{u as __pageData,m as default};
