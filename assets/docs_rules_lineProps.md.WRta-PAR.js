import{_ as s,c as a,o as t,ag as i}from"./chunks/framework.Bw-5EFTY.js";const m=JSON.parse('{"title":"lineProps","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/lineProps.md","filePath":"docs/rules/lineProps.md"}'),l={name:"docs/rules/lineProps.md"};function p(n,e,o,d,c,h){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="lineprops" tabindex="-1">lineProps <a class="header-anchor" href="#lineprops" aria-label="Permalink to &quot;lineProps&quot;">​</a></h1><p>通过规则启用 proxyHost、proxyTunnel、safeHtml 等功能。</p><blockquote><p>📌 与 <a href="./enable.html">enable</a> 的区别：</p><p><code>enable</code> 是全局生效的配置</p><p><code>lineProps</code> 只对配置所在行的规则生效</p></blockquote><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern operation lineProps://action1|action2|... [filters...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 等效于：</span></span>
<span class="line"><span>pattern operation lineProps://action1 lineProps://action2 ... [filters...]</span></span></code></pre></div><blockquote><p><code>lineProps</code> 不能单独作为 <code>operation</code> 使用，且只对同一行的 <code>operation</code> 生效</p></blockquote><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>operation</td><td>操作指令</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>action</td><td>具体动作，详见下面的说明</td><td></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><ul><li><code>important</code>：类型 css 属性的 <code>!important</code>，提升规则优先级</li><li><code>safeHtml</code>：是一种安全防护机制，当使用 <code>htmlXxx</code>/<code>jsXxx</code>/<code>cssXxx</code> 向 HTML 页面注入内容时，会先检查响应内容的第一个非空白字符是否为 <code>{</code> 和 <code>[</code>（JSON 对象开头字符），如果不是才会执行注入操作。这可以有效防止对非标准 HTML 响应（如 JSON 接口）的误注入</li><li><code>strictHtml</code>：是一种安全防护机制，当使用 <code>htmlXxx</code>/<code>jsXxx</code>/<code>cssXxx</code> 向 HTML 页面注入内容时，会先检查响应内容的第一个非空白字符是否为 <code>&lt;</code>，如果不是才会执行注入操作。这可以有效防止对非标准 HTML 响应（如 JSON 接口）的误注入</li><li><code>disableAutoCors</code>：禁用 <a href="./file.html">file</a> 协议替换请求时自动添加必要的 CORS (跨域资源共享) 头信息</li><li><code>disableUserLogin</code>：禁用设置 <a href="./statusCode.html">statusCode://401</a> 时显示登录框</li><li><code>enableUserLogin</code>：设置 <a href="./statusCode.html">statusCode://401</a> 是否显示登录框（默认显示，用于关闭 <code>disable.userLogin</code>）</li><li><code>internal</code>：将 <code>proxy</code>、<code>socks</code>、<code>host</code> 协议掉规则同时作用于 Whistle 内部请求</li><li><code>internalOnly</code>：将 <code>proxy</code>、<code>socks</code>、<code>host</code> 协议掉规则只作用于 Whistle 内部请求</li><li><code>internalProxy</code>：利用 <code>proxy</code>、<code>socks</code> 等代理协议将请求转发至其他代理服务器（如另一 Whistle 实例）。启用此功能后，已在第一层代理解密的 HTTPS 请求将以明文形式在代理链中传输，从而上游代理可以直接获取明文数据</li><li><code>proxyFirst</code>：优先使用 <a href="./proxy.html">proxy</a> 规则（默认情况下，同时匹配 <code>host</code> 和 <code>proxy</code>，只有 <code>host</code> 生效）</li><li><code>proxyHost</code>：<a href="./proxy.html">proxy</a> 和 <a href="./host.html">host</a> 同时生效</li><li><code>proxyHostOnly</code>：功能同 <code>proxyHost</code>，但如果没有匹配 <a href="./host.html">host</a> 则 <a href="./proxy.html">proxy</a> 自动失效</li><li><code>proxyTunnel</code>：跟 <code>proxyHost</code> 一同使用，让上游代理再次通过隧道代理到上上游的 HTTP 代理，详见下面的示例</li><li><code>weakRule</code>：<code>weakRule</code>：默认情况下，当配置了 <a href="./file.html">file</a> 等协议时，<a href="./proxy.html">proxy</a> 规则会自动失效。通过设置 <code>weakRule</code> 属性，可以提升 <a href="./proxy.html">proxy</a> 规则的优先级，使其在上述场景中仍然生效</li></ul><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><h4 id="未使用-lineprops-important" tabindex="-1">未使用 <code>lineProps://important</code> <a class="header-anchor" href="#未使用-lineprops-important" aria-label="Permalink to &quot;未使用 \`lineProps://important\`&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file:///User/xxx/important1.html</span></span>
<span class="line"><span>www.example.com/path file:///User/xxx/important2.html</span></span></code></pre></div><p>访问 <code>https://www.example.com/path </code> 将匹配 <code>file:///User/xxx/important1.html</code></p><h4 id="使用-lineprops-important" tabindex="-1">使用 <code>lineProps://important</code> <a class="header-anchor" href="#使用-lineprops-important" aria-label="Permalink to &quot;使用 \`lineProps://important\`&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file:///User/xxx/important1.html</span></span>
<span class="line"><span>www.example.com/path file:///User/xxx/important2.html lineProps://important</span></span></code></pre></div><p>访问 <code>https://www.example.com/path </code> 将匹配 <code>file:///User/xxx/important2.html</code></p><h4 id="注入文本" tabindex="-1">注入文本 <a class="header-anchor" href="#注入文本" aria-label="Permalink to &quot;注入文本&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://(test) resType://html</span></span>
<span class="line"><span>www.example.com/path htmlPrepend://(alert(1)) </span></span>
<span class="line"><span>www.example.com/path jsPrepend://(alert(1)) </span></span>
<span class="line"><span>www.example.com/path cssPrepend://(alert(1))</span></span></code></pre></div><p>访问 <code>https://www.example.com/path </code> 返回响应内容：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;alert(1)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alert(1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;test</span></span></code></pre></div><h4 id="使用-enable-stricthtml" tabindex="-1">使用 <code>enable://strictHtml</code> <a class="header-anchor" href="#使用-enable-stricthtml" aria-label="Permalink to &quot;使用 \`enable://strictHtml\`&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://(test) resType://html</span></span>
<span class="line"><span>www.example.com/path htmlPrepend://(alert(1)) </span></span>
<span class="line"><span>www.example.com/path jsPrepend://(alert(1)) enable://strictHtml</span></span>
<span class="line"><span>www.example.com/path cssPrepend://(alert(1))</span></span></code></pre></div><p>访问 <code>https://www.example.com/path</code> 返回响应内容：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span></span></code></pre></div><blockquote><p><code>enable://strictHtml</code> 对所有规则都生效</p></blockquote><h3 id="使用-lineprops-stricthtml" tabindex="-1">使用 <code>lineProps://strictHtml</code> <a class="header-anchor" href="#使用-lineprops-stricthtml" aria-label="Permalink to &quot;使用 \`lineProps://strictHtml\`&quot;">​</a></h3><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://(test) resType://html</span></span>
<span class="line"><span>www.example.com/path htmlPrepend://(alert(1)) </span></span>
<span class="line"><span>www.example.com/path jsPrepend://(alert(1)) lineProps://strictHtml</span></span>
<span class="line"><span>www.example.com/path cssPrepend://(alert(1))</span></span></code></pre></div><p>访问 <code>https://www.example.com/path</code> 返回响应内容：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;alert(1)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alert(1)test</span></span></code></pre></div><blockquote><p><code>lineProps://strictHtml</code> 只对所在行的规则生效</p></blockquote>`,29)]))}const k=s(l,[["render",p]]);export{m as __pageData,k as default};
