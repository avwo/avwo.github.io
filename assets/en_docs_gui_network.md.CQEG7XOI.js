import{_ as e}from"./chunks/network.SCBJzEcF.js";import{_ as o,c as d,o as r,ag as s}from"./chunks/framework.Bw-5EFTY.js";const g=JSON.parse('{"title":"Network Interface","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/gui/network.md","filePath":"en/docs/gui/network.md"}'),a={name:"en/docs/gui/network.md"};function i(n,t,c,l,p,h){return r(),d("div",null,t[0]||(t[0]=[s('<h1 id="network-interface" tabindex="-1">Network Interface <a class="header-anchor" href="#network-interface" aria-label="Permalink to &quot;Network Interface&quot;">​</a></h1><p>Interface for viewing and managing captured packet data</p><img src="'+e+'" alt="Network Interface" width="1000"><h2 id="filter" tabindex="-1">Bottom Search Box <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;Bottom Search Box {#filter}&quot;">​</a></h2><p>The search box supports various advanced filtering methods, allowing you to quickly locate specific types of requests by prefix:</p><table tabindex="0"><thead><tr><th>Prefix</th><th>Filter Target</th><th>Example</th></tr></thead><tbody><tr><td><code>No Prefix</code></td><td>Request URL</td><td><code>example.com/api</code> <code>/abc=123/i</code></td></tr><tr><td><code>m:pattern</code></td><td>Request Method</td><td><code>m:pos</code> <code>m:/get|post/i</code></td></tr><tr><td><code>h:pattern</code></td><td>Request/Response Header Raw Text</td><td><code>h:image/</code> <code>h:/cookie:\\s*test=123/i</code></td></tr><tr><td><code>H:pattern</code></td><td>Request Header Host Field</td><td><code>H:example.com</code> <code>H:/test/i</code></td></tr><tr><td><code>b:pattern</code></td><td>Request/response body original content</td><td><code>b:&quot;error&quot;:true</code> <code>b:/\\d{3}/</code></td></tr><tr><td><code>i:pattern</code></td><td>Client IP or server IP</td><td><code>i:11.2</code> <code>i:/^11\\.2/</code></td></tr><tr><td><code>s:pattern</code></td><td>Response status code</td><td><code>s:404</code> <code>s:/5\\d{2}/</code></td></tr><tr><td><code>t:pattern</code></td><td>Response header Content-Type</td><td><code>t:json</code> <code>t:/html|xml/i</code></td></tr><tr><td><code>mark:pattern</code></td><td>Request URL manually marked in the right-click menu</td><td><code>mark:example.com</code> <code>mark:/\\d{5}/</code></td></tr><tr><td><code>app:pattern</code></td><td>Filter by app name</td><td><code>app:wechat</code> <code>app:chrome</code></td></tr><tr><td><code>fc:pattern</code></td><td>Request URL issued by Composer</td><td><code>fc:/test/</code> <code>fc:www.test.com</code></td></tr><tr><td><code>e:pattern</code></td><td>Errored request URL</td><td><code>e:timeout</code> <code>e:/abort/i</code></td></tr><tr><td><code>style:pattern</code></td><td><a href="./../rules/style.html">style</a> Operation content</td><td><code>style:italic</code> <code>style:/ita/i</code></td></tr></tbody></table><p><code>pattern</code> is a <strong>keyword</strong> or <strong>regular expression</strong>. Use &quot;AND&quot; to search for multiple conditions:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>b:/&quot;success&quot;:false/ m:POST s:200 H:api.example.com</span></span></code></pre></div><h2 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h2><p><strong>Exclude Filter</strong> and <strong>Include Filter</strong> allow for refined filtering of captured data not displayed in the Network view. Multiple condition combinations are supported:</p><table tabindex="0"><thead><tr><th><strong>Filter Type</strong></th><th><strong>Function</strong></th><th></th></tr></thead><tbody><tr><td><strong>Include Filter</strong></td><td><strong>Only retain</strong> requests that meet the conditions (equivalent to a whitelist)</td><td></td></tr><tr><td><strong>Exclude Filter</strong></td><td><strong>Exclude</strong> requests that meet the conditions (equivalent to a blacklist)</td><td></td></tr></tbody></table><ol><li>Conditions within a single input box <ul><li>Separation method: Use spaces or newlines to separate multiple conditions</li><li>Logical relationship: Conditions are ORed</li></ul><blockquote><p>Example: <code>example.com api.test.com</code> → Matches requests from example.com or api.test.com</p></blockquote></li><li>Conditions between multiple input boxes <ul><li>Logical relationship: Conditions are ANDed</li><li>Example: <ul><li>Include Filter input: <code>m:GET</code></li><li>Exclude Filter input: <code>h:/cookie:[^\\r\\n]*test=123/</code></li><li>Result: Only GET requests are retained, and requests containing <code>test=123</code> in the request header cookie are excluded</li></ul></li></ul></li></ol><p><strong>Supported filter conditions</strong>:</p><table tabindex="0"><thead><tr><th><strong>Syntax</strong></th><th><strong>Effect</strong></th><th><strong>Example</strong></th></tr></thead><tbody><tr><td><code>no prefix</code></td><td>Matches requests whose request URL contains this keyword</td><td><code>.example.com</code></td></tr><tr><td><code>m:pattern</code></td><td>Matches request method</td><td><code>m:POST</code> (matches POST requests)</td></tr><tr><td><code>h:pattern</code></td><td>Matches original request header</td><td><code>h:/cookie:[^\\r\\n]*test=123/</code> (matches cookies)</td></tr><tr><td><code>H:pattern</code></td><td>Matches request header Host field</td><td><code>H:example.com</code> <code>H:/test/i</code></td></tr><tr><td><code>i:pattern</code></td><td>Matches client IP</td><td><code>i:11.2</code> <code>i:/^11\\.2/</code></td></tr></tbody></table><p>Different from the search box at the bottom of the Network list:</p><table tabindex="0"><thead><tr><th><strong>Function</strong></th><th><strong>Network search box</strong></th><th><strong>Filter in Settings</strong></th></tr></thead><tbody><tr><td><strong>Match range</strong></td><td>All data in the request and response stages</td><td><strong>Matches only the request phase</strong> (does not include response data)</td></tr><tr><td><strong>Effective Time</strong></td><td>Filters displayed and future requests in real time</td><td><strong>Effective only for new future requests</strong></td></tr><tr><td><strong>Affects Historical Data</strong></td><td>Can filter existing packet capture records</td><td><strong>Does not affect displayed requests</strong></td></tr></tbody></table><p><strong>Other Options:</strong></p><table tabindex="0"><thead><tr><th>Item Name</th><th>Function Description</th></tr></thead><tbody><tr><td><strong>Network Columns</strong></td><td>Customize the columns displayed in the packet capture list (such as status code, method, size, etc.)</td></tr><tr><td><strong>Maximum Rows</strong></td><td>Set the maximum number of packets displayed simultaneously (to prevent memory overflow)</td></tr><tr><td><strong>Viewing only your computer&#39;s requests</strong></td><td>Displays only requests sent by the local computer (filters requests from other devices/remote requests)</td></tr><tr><td><strong>View All in new window</strong></td><td>Click &quot;View All&quot; to open the full content in a new window (suitable for viewing large response bodies)</td></tr><tr><td><strong>Show Tree View</strong></td><td>Displays requests in a tree structure (grouped by domain name/path)</td></tr></tbody></table><h2 id="detail" tabindex="-1">Details Panel <a class="header-anchor" href="#detail" aria-label="Permalink to &quot;Details Panel {#detail}&quot;">​</a></h2><ol><li>Overview: Basic information about matching rules and requests</li><li>Inspectors: Detailed information about request/response headers and content</li><li>Timeline: Request performance information</li><li>Composer: <a href="./https.html">Composer interface</a></li><li>Tools: Various tools <ul><li>Console: Displays remote console logs. For details, see <a href="./console.html">Console</a></li><li>Server: Displays exceptions that occur during Whistle execution</li><li>Toolbox: Common tools and methods</li></ul></li></ol><h2 id="other-menus" tabindex="-1">Other Menus <a class="header-anchor" href="#other-menus" aria-label="Permalink to &quot;Other Menus&quot;">​</a></h2><ol><li>Replay: Replays the selected capture data</li><li>Edit: Populates the capture data in the Composer window on the right</li><li>Arrow button in the upper right corner: Switches to top-down panel mode, suitable for portrait-oriented monitors</li></ol>',22)]))}const f=o(a,[["render",i]]);export{g as __pageData,f as default};
