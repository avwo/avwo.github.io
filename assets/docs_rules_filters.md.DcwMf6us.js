import{_ as e,c as d,o as r,ae as c}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"过滤器","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/filters.md","filePath":"docs/rules/filters.md"}'),o={name:"docs/rules/filters.md"};function a(l,t,i,n,p,s){return r(),d("div",null,t[0]||(t[0]=[c('<h1 id="过滤器" tabindex="-1">过滤器 <a class="header-anchor" href="#过滤器" aria-label="Permalink to &quot;过滤器&quot;">​</a></h1><p>当需要基于请求属性或响应属性（而不仅仅是URL）进行匹配时，可以使用过滤器来实现更精细化的规则控制，语法结构：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern opertaion includeFilter://pattern1 ... excludeFilter://patternx ...</span></span></code></pre></div><blockquote><p>多个过滤器间为「或」匹配，只要匹配其中一个过滤条件就成立</p></blockquote><h2 id="过滤器类型" tabindex="-1">过滤器类型 <a class="header-anchor" href="#过滤器类型" aria-label="Permalink to &quot;过滤器类型&quot;">​</a></h2><table tabindex="0"><thead><tr><th>过滤器类型</th><th>语法格式</th><th>用途</th></tr></thead><tbody><tr><td><strong>包含过滤器</strong></td><td><code>includeFilter://pattern</code></td><td>只匹配符合指定条件的请求</td></tr><tr><td><strong>排除过滤器</strong></td><td><code>excludeFilter://pattern</code></td><td>排除符合指定条件的请求</td></tr></tbody></table><h2 id="pattern-类型" tabindex="-1">pattern 类型 <a class="header-anchor" href="#pattern-类型" aria-label="Permalink to &quot;pattern 类型&quot;">​</a></h2><table tabindex="0"><thead><tr><th>语法</th><th>用途</th><th>示例</th></tr></thead><tbody><tr><td><code>b:pattern</code></td><td>匹配请求体内容</td><td><code>includeFilter://b:keyword</code> <code>excludeFilter://b:/regexp/[i]</code></td></tr><tr><td><code>m:pattern</code></td><td>匹配 HTTP 方法</td><td><code>includeFilter://m:keyword</code> <code>excludeFilter://m:/regexp/[i]</code></td></tr><tr><td><code>i:pattern</code></td><td>匹配客户端或服务端 IP</td><td><code>includeFilter://i:keyword</code> <code>excludeFilter://i:/regexp/[i]</code></td></tr><tr><td><code>chance:probability</code></td><td><code>Math.random() &lt; probability</code></td><td><code>includeFilter://chance:0.5</code> <code>excludeFilter://chance:0.3</code></td></tr><tr><td><code>clientIp:pattern</code></td><td>仅匹配客户端 IP</td><td><code>includeFilter://clientIp:/regexp/[i]</code> <code>excludeFilter://clientIp:keyword</code></td></tr><tr><td><code>serverIp:pattern</code></td><td>仅匹配服务端 IP</td><td><code>includeFilter://serverIp:/regexp/[i]</code> <code>excludeFilter://serverIp:keyword</code></td></tr><tr><td><code>s:pattern</code></td><td>匹配响应状态码</td><td><code>includeFilter://s:/^20/</code> <code>excludeFilter://s:30</code></td></tr><tr><td><code>h:name=pattern</code></td><td>匹配请求/响应头</td><td><code>includeFilter://h:content-type=json</code> <code>excludeFilter://h:content-type=/regexp/i</code></td></tr><tr><td><code>reqH:name=pattern</code></td><td>仅匹配请求头</td><td><code>includeFilter://reqH:content-type=json</code> <code>excludeFilter://reqH:content-type=/regexp/i</code></td></tr><tr><td><code>resH:name=pattern</code></td><td>仅匹配响应头</td><td><code>includeFilter://resH:content-type=json</code> <code>excludeFilter://resH:content-type=/regexp/i</code></td></tr><tr><td>其它 <code>xxxxxx</code></td><td>匹配请求 URL（同 <a href="./pattern.html">pattern</a>）</td><td><code>includeFilter://*/cgi-*</code> <code>excludeFilter://www.test.com</code> <code>includeFilter://https://www.test.com/path</code></td></tr></tbody></table>',8)]))}const x=e(o,[["render",a]]);export{u as __pageData,x as default};
