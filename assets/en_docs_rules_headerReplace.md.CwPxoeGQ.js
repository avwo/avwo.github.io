import{_ as a,c as t,o as s,ae as n}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"headerReplace","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/headerReplace.md","filePath":"en/docs/rules/headerReplace.md"}'),r={name:"en/docs/rules/headerReplace.md"};function p(l,e,o,d,i,c){return s(),t("div",null,e[0]||(e[0]=[n('<h1 id="headerreplace" tabindex="-1">headerReplace <a class="header-anchor" href="#headerreplace" aria-label="Permalink to &quot;headerReplace&quot;">​</a></h1><p>Replaces the specified request/response header by matching a keyword or regular expression.</p><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern headerReplace://value [filters...]</span></span></code></pre></div><blockquote><p><code>header-name</code> is case-insensitive</p></blockquote><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>An expression to match the request URL</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td>Three cases: <br>• <code>req.header-name:p1=v1&amp;p2=v2</code><br>• <code>res.header-name:p1=v1&amp;p2=v2</code><br>• <code>trailer.trailer-name:p1=v1&amp;p2=v2</code></td><td><a href="./operation.html">Operation Instruction Documentation</a></td></tr><tr><td>filters</td><td>Optional filters, supporting matching: <br>• Request URL/Method/Header/Content<br>• Response Status Code/Header</td><td><a href="./filters.html">Filter Documentation</a></td></tr></tbody></table><h2 id="configuration-example" tabindex="-1">Configuration Example <a class="header-anchor" href="#configuration-example" aria-label="Permalink to &quot;Configuration Example&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Change the first `html` keyword in the `accept` request header field to `abc`</span></span>\n<span class="line"><span>www.example.com/path headerReplace://req.accept:html=abc</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Change all `ml` keywords in the `accept` request header field to `abc`</span></span>\n<span class="line"><span>www.example.com/path2 headerReplace://req.accept:/ml/g=abc</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Modify the response header</span></span>\n<span class="line"><span>www.example.com/path3 headerReplace://res.Content-Type:html=plain</span></span></code></pre></div><p><code>headerReplace</code> is used to replace partial request/response header content. To modify request/response field content, you can also use:</p><ul><li>Set request headers: <a href="./reqHeaders.html">reqHeaders</a></li><li>Set response headers: <a href="./resHeaders.html">resHeaders</a></li></ul>',10)]))}const m=a(r,[["render",p]]);export{u as __pageData,m as default};
