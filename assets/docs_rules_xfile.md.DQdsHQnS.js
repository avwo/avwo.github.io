import{_ as a,c as l,o as t,ae as i}from"./chunks/framework.Dgg8-8ov.js";const h=JSON.parse('{"title":"xfile","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/xfile.md","filePath":"docs/rules/xfile.md"}'),s={name:"docs/rules/xfile.md"};function r(o,e,n,f,c,d){return t(),l("div",null,e[0]||(e[0]=[i('<h1 id="xfile" tabindex="-1">xfile <a class="header-anchor" href="#xfile" aria-label="Permalink to &quot;xfile&quot;">​</a></h1><p>xfile 是 <a href="./file.html">file</a> 规则的穿透版本，主要区别在于文件不存在时的处理方式：</p><ul><li>✅ 文件存在时：返回本地文件内容（与 <a href="./file.html">file</a> 规则行为一致）</li><li>❌ 文件不存在时：继续正常网络请求（而 <a href="./file.html">file</a> 规则会返回 <code>404</code>）</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xfile://value [filters...]</span></span></code></pre></div><p>详细用法参考：<a href="./file.html">file</a></p>',6)]))}const _=a(s,[["render",r]]);export{h as __pageData,_ as default};
