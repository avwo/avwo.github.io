import{_ as a,c as n,o as t,ag as i}from"./chunks/framework.Bw-5EFTY.js";const k=JSON.parse('{"title":"rawfile","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/rawfile.md","filePath":"docs/rules/rawfile.md"}'),e={name:"docs/rules/rawfile.md"};function l(p,s,h,r,d,o){return t(),n("div",null,s[0]||(s[0]=[i(`<h1 id="rawfile" tabindex="-1">rawfile <a class="header-anchor" href="#rawfile" aria-label="Permalink to &quot;rawfile&quot;">​</a></h1><p>rawfile 是 <a href="./file.html">file</a> 的增强版本，除了支持 <a href="./file.html">file</a> 的所有功能外，还允许在文件中定义完整的 HTTP 响应，包括：</p><ul><li>响应状态码</li><li>响应头部</li><li>响应内容</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern rawfile://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>操作内容，支持以下类型：<br>• 目录/文件路径<br>• 远程 URL<br>• 内联/内嵌/Values内容</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="mock-接口" tabindex="-1">Mock 接口 <a class="header-anchor" href="#mock-接口" aria-label="Permalink to &quot;Mock 接口&quot;">​</a></h2><ol><li>本地文件 <code>/User/xxx/raw.txt</code><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HTTP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 500</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> OK</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: application</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">json</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Custom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your content here&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li>配置规则<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.example.com/test/rawfile tpl:///User/xxx/raw.txt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 等价于</span></span>
<span class="line"><span>#  https://www.example.com/test/rawfile file:///User/xxx/test.json replaceStatus://500 resType://json resHeaders://x-custom-header=value</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 支持远程 URL</span></span>
<span class="line"><span># pattern rawfile://https://example.com/raw.json</span></span></code></pre></div></li><li>请求 <code>https://www.example.com/test/rawfile</code> 返回结果：<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 状态码</span></span>
<span class="line"><span>500</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 响应头</span></span>
<span class="line"><span>content-type: application/json</span></span>
<span class="line"><span>x-custom-header: value</span></span>
<span class="line"><span>content-length: 56</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 响应内容</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;status&quot;: &quot;success&quot;,</span></span>
<span class="line"><span>  &quot;data&quot;: &quot;your content here&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div></li></ol><p>其它功能参考：<a href="./file.html">file</a></p>`,9)]))}const u=a(e,[["render",l]]);export{k as __pageData,u as default};
