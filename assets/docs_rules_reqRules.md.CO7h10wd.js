import{_ as t,c as e,o as s,ag as l}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"reqRules","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/reqRules.md","filePath":"docs/rules/reqRules.md"}'),n={name:"docs/rules/reqRules.md"};function p(r,a,i,d,o,h){return s(),e("div",null,a[0]||(a[0]=[l('<h1 id="reqrules" tabindex="-1">reqRules <a class="header-anchor" href="#reqrules" aria-label="Permalink to &quot;reqRules&quot;">​</a></h1><p>为匹配的请求批量设置多个规则，实现复杂场景下的请求处理需求。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern reqRules://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>规则内容，支持以下类型：<br>• 目录/文件路径<br>• 远程 URL<br>• 内联/内嵌/Values内容</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>``` test.txt</span></span>\n<span class="line"><span>* file://(&lt;div&gt;hello&lt;div&gt;)</span></span>\n<span class="line"><span>* resType://text</span></span>\n<span class="line"><span>```</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>``` test2.txt</span></span>\n<span class="line"><span>* resAppend://(test)</span></span>\n<span class="line"><span>```</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>www.example.com/path reqRules://{test.txt} reqRules://{test2.txt}</span></span></code></pre></div><p>访问 <code>https://www.example.com/path/to</code> 返回内容：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;div&gt;hello&lt;div&gt;test</span></span></code></pre></div><h2 id="关联协议" tabindex="-1">关联协议 <a class="header-anchor" href="#关联协议" aria-label="Permalink to &quot;关联协议&quot;">​</a></h2><ol><li>请求阶段脚本规则：<a href="./reqScript.html">reqScript</a></li><li>响应阶段批量规则：<a href="./resRules.html">resRules</a></li><li>响应阶段脚本规则：<a href="./resScript.html">resScript</a></li><li>更复杂的定制需求：<a href="./../extensions/dev.html">插件开发</a></li></ol>',11)]))}const b=t(n,[["render",p]]);export{u as __pageData,b as default};
