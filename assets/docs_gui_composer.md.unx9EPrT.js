import{_ as r}from"./chunks/composer.CxM1DTrJ.js";import{_ as o,c as d,o as s,ae as e}from"./chunks/framework.Dgg8-8ov.js";const h=JSON.parse('{"title":"Composer 界面","description":"","frontmatter":{},"headers":[],"relativePath":"docs/gui/composer.md","filePath":"docs/gui/composer.md"}'),n={name:"docs/gui/composer.md"};function a(g,t,p,i,m,c){return s(),d("div",null,t[0]||(t[0]=[e('<h1 id="composer-界面" tabindex="-1">Composer 界面 <a class="header-anchor" href="#composer-界面" aria-label="Permalink to &quot;Composer 界面&quot;">​</a></h1><p>Composer 是 Whistle 提供的 HTTP 请求构造工具，可用于快速创建、修改和发送自定义请求，支持高级调试功能。</p><img src="'+r+'" alt="Composer 界面" width="360"><table tabindex="0"><thead><tr><th>组件</th><th>功能</th></tr></thead><tbody><tr><td><strong>历史记录按钮</strong></td><td>显示或隐藏历史记录</td></tr><tr><td><strong>选择方法</strong></td><td>选择请求方法，支持 GET/POST/PUT 等多种种方法</td></tr><tr><td><strong>URL 输入框</strong></td><td>编辑或输入请求 URL径</td></tr><tr><td><strong>Params</strong></td><td>添加、修改、删除请求参数</td></tr><tr><td><strong>发送按钮</strong></td><td>执行当前请求</td></tr><tr><td><strong>Rules + Whistle 选项</strong></td><td>Rules：是否启用输入框里面的规则，Whistle：否启用 Whistle 里面配置的规则</td></tr><tr><td><strong>Pretty</strong></td><td>格式化显示内容</td></tr><tr><td><strong>Body</strong></td><td>是否包含请求体（GET/HEAD/OPTIONS 等方法会自动忽略请求体）</td></tr><tr><td><strong>HTTP/2</strong></td><td>是否使用 HTTP/2 协议</td></tr><tr><td><strong>Import</strong></td><td>导入请求数据</td></tr><tr><td><strong>Export</strong></td><td>导出请求数据</td></tr><tr><td><strong>CopyAsCURL</strong></td><td>生成可执行的 cURL 命令</td></tr><tr><td><strong>规则输入框</strong></td><td>自定义规则，只对当前构造的请求生效</td></tr><tr><td><strong>请求头</strong></td><td>自定义请求头</td></tr><tr><td><strong>请求内容</strong></td><td>自定义请求内容</td></tr></tbody></table>',4)]))}const T=o(n,[["render",a]]);export{h as __pageData,T as default};
