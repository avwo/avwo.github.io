import{_ as a,c as r,o as e,ag as o}from"./chunks/framework.Bw-5EFTY.js";const d=JSON.parse('{"title":"xproxy (xhttp-proxy)","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/xproxy.md","filePath":"docs/rules/xproxy.md"}'),p={name:"docs/rules/xproxy.md"};function x(s,t,l,i,n,h){return e(),r("div",null,t[0]||(t[0]=[o('<h1 id="xproxy-xhttp-proxy" tabindex="-1">xproxy (xhttp-proxy) <a class="header-anchor" href="#xproxy-xhttp-proxy" aria-label="Permalink to &quot;xproxy (xhttp-proxy)&quot;">​</a></h1><p>xproxy (xhttp-proxy) 是 <a href="./proxy.html">proxy</a> 规则的穿透版本，主要区别在于跟目标代理建立连接失败时的处理方式：</p><ul><li>✅ 建立连接成功时：与 <a href="./proxy.html">proxy</a> 规则行为一致</li><li>❌ 建立连接失败时：忽略该匹配规则，继续正常网络请求（而 <a href="./proxy.html">proxy</a> 中断请求）</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xproxy://value [filters...]</span></span></code></pre></div><p>详细用法参考：<a href="./proxy.html">proxy</a></p>',6)]))}const y=a(p,[["render",x]]);export{d as __pageData,y as default};
