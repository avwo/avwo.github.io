import{_ as e,a,b as t}from"./chunks/edit-req.CTZrXCzh.js";import{_ as n}from"./chunks/rules.Cxzqu120.js";import{_ as p,c as l,o,ae as i}from"./chunks/framework.Dgg8-8ov.js";const x=JSON.parse('{"title":"快速上手","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getting-started.md","filePath":"docs/getting-started.md"}'),c={name:"docs/getting-started.md"};function d(r,s,h,u,g,b){return o(),l("div",null,s[0]||(s[0]=[i('<h1 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h1><p>安装完成后</p><ul><li><strong>客户端版本</strong>：直接启动桌面应用程序</li><li><strong>命令行版本</strong>：在浏览器中访问 <a href="http://local.whistlejs.com" target="_blank" rel="noreferrer">http://local.whistlejs.com</a></li></ul><p>即可进入操作界面：</p><img width="1000" alt="network" src="'+e+'"><p>操作界面主要功能：</p><ul><li><strong>Network</strong>：实时抓包分析与请求重放/编辑等界面</li><li><strong>Rules</strong>：修改请求/响应的规则配置界面</li><li><strong>Values</strong>：操作内容配置界面（支持规则变量调用）</li><li><strong>Plugins</strong>：插件管理界面</li></ul><h2 id="界面操作示例" tabindex="-1">界面操作示例 <a class="header-anchor" href="#界面操作示例" aria-label="Permalink to &quot;界面操作示例&quot;">​</a></h2><ol><li><p>重放请求</p><blockquote><p>点击请求并点击顶部 <code>Replay</code> 按钮，或请求列表右键菜单 Actions -&gt; Replay</p></blockquote><img width="720" alt="replay request" src="'+a+'"></li><li><p>编辑或构造请求</p><blockquote><p>点击请求并点击顶部 <code>Edit</code> 按钮，或请求列表右键菜单 Actions -&gt; Edit Request</p></blockquote><img width="1000" alt="edit request" src="'+t+'"></li></ol><p>完整功能参见：<a href="./gui/network.html">界面功能</a></p><h2 id="规则配置示例" tabindex="-1">规则配置示例 <a class="header-anchor" href="#规则配置示例" aria-label="Permalink to &quot;规则配置示例&quot;">​</a></h2><img width="1000" alt="set rules" src="'+n+`"><p>Whistle 通过简单的规则配置修改请求/响应，基本语法结构如下：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern operation [includeFilter://pattern1 ... excludeFilter://patternN ...]</span></span></code></pre></div><p><strong>规则由三个核心组件构成：</strong></p><ol><li><strong>匹配模式</strong> (<code>pattern</code>)，匹配请求 URL 的表达式，支持多种格式： <ul><li>域名匹配：<code>www.test.com</code>（匹配该域名所有请求，含端口）</li><li>路径匹配：<code>www.test.com/path</code></li><li>正则表达式：<code>/^https?://test\\.com//i</code></li><li>通配符：<code>*.test.com</code>、<code>**.test.com/path</code></li></ul><blockquote><p>Whistle 有三种 URL 类型：</p><ol><li><strong>隧道代理：</strong><code>tunnel://domain[:port]</code></li><li><strong>WebSocket：</strong><code>ws[s]://domain[:port]/path/to</code></li><li><strong>普通 HTTP/HTTPS：</strong><code>http[s]://domain[:port]/path/to</code></li></ol></blockquote></li><li><strong>操作指令</strong> (<code>operation</code>)，格式：<code>protocol://value</code><ul><li><code>protocol</code>：操作类型，如： <ul><li><code>reqHeaders</code>：修改请求头</li><li><code>resHeaders</code>：修改响应头</li></ul></li><li><code>value</code>：操作内容，支持多种数据源： <ul><li>内联值：<code>reqHeaders://x-proxy-by=whistle</code>（直接添加请求头）</li><li>本地文件：<code>file://path/to/file</code></li><li>远程资源：<code>https://example.com/data.json</code></li><li>预设变量：<code>{key}</code>（从 Rules 里面的内嵌值 或 Values 读取）</li></ul></li></ul><blockquote><p><strong>operation</strong> 里面的 <code>protocol://</code> 在以下两种场景时可以省略：</p><ul><li><code>ip</code> 或 <code>ip:port</code>：等价于 <code>host://ip</code> 或 <code>host://ip:port</code></li><li><code>D:\\path\\to</code>、<code>/path/to</code> 或 <code>{key}</code>：等价于 <code>file://D:\\path\\to</code>、<code>file:///path/to</code> 或 <code>file://{key}</code></li></ul></blockquote></li><li><strong>过滤条件（可选）</strong> (<code>includeFilter/excludeFilter</code>) <ul><li>逻辑关系：多条件间为「或」匹配，只要匹配其中一个过滤条件就成立</li><li>匹配范围： <ul><li>请求：URL、方法（GET/POST等）、头部字段、内容、客户端 IP</li><li>响应：状态码、头部字段、内容、服务端 IP</li></ul></li></ul></li></ol><h4 id="示例1-修改-dns-设置-hosts" tabindex="-1">示例1：修改 DNS（设置 Hosts） <a class="header-anchor" href="#示例1-修改-dns-设置-hosts" aria-label="Permalink to &quot;示例1：修改 DNS（设置 Hosts）&quot;">​</a></h4><ol><li><p>域名匹配</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.test.com 127.0.0.1</span></span>
<span class="line"><span># 支持带端口</span></span>
<span class="line"><span>www.test.com 127.0.0.1:8080</span></span>
<span class="line"><span># CNAME 功能（端口可选）</span></span>
<span class="line"><span>www.test.com host://www.example.com:8181</span></span></code></pre></div></li><li><p>路径匹配</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.test.com/path/to 127.0.0.1:8080</span></span>
<span class="line"><span># 支持带协议</span></span>
<span class="line"><span>https://www.test.com/path/to 127.0.0.1:8080</span></span>
<span class="line"><span># 只作用于隧道代理请求</span></span>
<span class="line"><span>tunnel://* 127.0.0.1:8080</span></span></code></pre></div></li><li><p>通配符匹配</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 域名通配符，匹配 test.com 的所有子代域名</span></span>
<span class="line"><span>**.test.com 127.0.0.1:8080</span></span>
<span class="line"><span># 支持带协议域名通配符</span></span>
<span class="line"><span>https://**.test.com 127.0.0.1:8080</span></span>
<span class="line"><span># 路径通配符（* 是路径的合法字符，所以前面要加 ^ 告诉 Whistle 是通配符）</span></span>
<span class="line"><span>^**.test.com/*/path/to 127.0.0.1:8080</span></span>
<span class="line"><span># 支持带协议路径通配符</span></span>
<span class="line"><span>^https://**.test.com/*/path/to 127.0.0.1:8080</span></span></code></pre></div><blockquote><p><code>*</code>、<code>**</code>、<code>***</code> 匹配的范围不同，参见文档：<a href="./rules/pattern.html">pattern</a></p></blockquote></li><li><p>正则匹配</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 规则正则表达式里面的 \`/\` 转不转义都可以</span></span>
<span class="line"><span>/^https?://\\w+\\.test\\.com/ 127.0.0.1:8080</span></span></code></pre></div><blockquote><p><code>/regexp/x</code> 等价于 <code>new RegExp(regexp, x)</code></p></blockquote></li><li><p>过滤匹配</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 请求 URL 匹配 \`pattern\` 且请求头 \`cookie\` 包含 \`env=test\`</span></span>
<span class="line"><span>pattern 127.0.0.1:8080 includeFilter://reqH.cookie=/env=test/</span></span>
<span class="line"><span># 只对 iPhone 发起的该请求生效</span></span>
<span class="line"><span>https://www.test.com/path/to 127.0.0.1:8080 includeFilter://reqH.user-agent=/iPhone/i</span></span></code></pre></div></li></ol><h5 id="示例2-修改表单数据" tabindex="-1">示例2：修改表单数据 <a class="header-anchor" href="#示例2-修改表单数据" aria-label="Permalink to &quot;示例2：修改表单数据&quot;">​</a></h5><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 修改表单里面的 \`test\` 字段的值</span></span>
<span class="line"><span>pattern reqMerge://test=123</span></span>
<span class="line"><span># 删除表单里面的 \`abc\` 字段</span></span>
<span class="line"><span>pattern delete://reqBody.abc</span></span></code></pre></div><h5 id="示例3-设置跨域响应头" tabindex="-1">示例3：设置跨域响应头 <a class="header-anchor" href="#示例3-设置跨域响应头" aria-label="Permalink to &quot;示例3：设置跨域响应头&quot;">​</a></h5><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 设置跨域响应头 Access-Control-Allow-Origin: *，且排除 OPTION 请求</span></span>
<span class="line"><span>pattern resCors://* excludeFilter://m:option</span></span>
<span class="line"><span># 非 \`*\` 的跨域请求头</span></span>
<span class="line"><span>pattern resCors://enable</span></span></code></pre></div><h2 id="规则高级配置" tabindex="-1">规则高级配置 <a class="header-anchor" href="#规则高级配置" aria-label="Permalink to &quot;规则高级配置&quot;">​</a></h2><ol><li><p>组合配置</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern operation1 operation2 ... [includeFilter://pattern1 ... excludeFilter://patternN ...]</span></span></code></pre></div></li><li><p>位置调换（<code>pattern1</code> 和 <code>operation</code> 不同时为 URL 或域名）</p><blockquote><p>即不同时为形如 <code>https://test.com/path</code>、<code>//test.com/path</code>、<code>test.com/path</code>、<code>test.com</code> 的 URL 或域名</p></blockquote><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>operation pattern1 pattern2 ... [includeFilter://pattern1 ... excludeFilter://patternN ...]</span></span></code></pre></div></li><li><p>换行配置</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>line\`</span></span>
<span class="line"><span>operation</span></span>
<span class="line"><span>pattern1</span></span>
<span class="line"><span>pattern2</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>[includeFilter://pattern1</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>excludeFilter://patternN </span></span>
<span class="line"><span>...]</span></span>
<span class="line"><span>\`</span></span></code></pre></div><blockquote><p>Whistle 会自动将代码块里面的换行符自动替换成空格</p></blockquote><p>完整功能参见：<a href="./rules/pattern.html">规则配置</a></p></li></ol>`,24)]))}const w=p(c,[["render",d]]);export{x as __pageData,w as default};
