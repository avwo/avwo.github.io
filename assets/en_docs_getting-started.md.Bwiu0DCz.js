import{_ as t,a,b as s}from"./chunks/edit-req.CTZrXCzh.js";import{_ as n}from"./chunks/rules.Cxzqu120.js";import{_ as o,c as i,o as l,ae as p}from"./chunks/framework.Dgg8-8ov.js";const k=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/getting-started.md","filePath":"en/docs/getting-started.md"}'),c={name:"en/docs/getting-started.md"};function r(d,e,h,u,g,m){return l(),i("div",null,e[0]||(e[0]=[p('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><p>After installation is complete</p><ul><li><strong>Client Version</strong>: Launch the desktop application directly</li><li><strong>Command Line Version</strong>: Visit <a href="http://local.whistlejs.com" target="_blank" rel="noreferrer">http://local.whistlejs.com</a> in your browser</li></ul><p>You will now be able to access the user interface:</p><img width="1000" alt="network" src="'+t+'"><p>Key User Interface Features:</p><ul><li><strong>Network</strong>: Real-time packet capture analysis and request replay/editing</li><li><strong>Rules</strong>: Rule configuration interface for modifying requests and responses</li><li><strong>Values</strong>: Action content configuration interface (supports calling rule variables)</li><li><strong>Plugins</strong>: Plugin management interface</li></ul><h2 id="user-interface-examples" tabindex="-1">User Interface Examples <a class="header-anchor" href="#user-interface-examples" aria-label="Permalink to &quot;User Interface Examples&quot;">​</a></h2><ol><li>Replaying a Request <blockquote><p>Click a request and click the <code>Replay</code> button at the top, or right-click the request list and select Actions -&gt; Replay</p></blockquote></li></ol><img width="720" alt="replay request" src="'+a+'"> 2. Editing or Constructing a Request &gt; Click a request and click the `Edit` button at the top button, or right-click the request list and select Actions -&gt; Edit Request. <img width="1000" alt="edit request" src="'+s+'"><p>For full functionality, see: <a href="./gui/network.html">Interface Features</a></p><h2 id="rule-configuration-example" tabindex="-1">Rule Configuration Example <a class="header-anchor" href="#rule-configuration-example" aria-label="Permalink to &quot;Rule Configuration Example&quot;">​</a></h2><img width="1000" alt="set rules" src="'+n+`"><p>Whistle modifies requests and responses through simple rule configuration. The basic syntax is as follows:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern operation [includeFilter://pattern1 ... excludeFilter://patternN ...]</span></span></code></pre></div><p><strong>Rules consist of three core components:</strong></p><ol><li><strong>Match Pattern</strong> (<code>pattern</code>): An expression that matches the request URL. Multiple formats are supported: <ul><li>Domain Match: <code>www.test.com</code> (matches all requests to that domain, including the port)</li><li>Path Match: <code>www.test.com/path</code></li><li>Regular expression: <code>/^https?://test\\.com//i</code></li><li>Wildcards: <code>*.test.com</code>, <code>**.test.com/path</code><blockquote><p>Whistle supports three URL types:</p><ol><li><strong>Tunnel proxy</strong>: <code>tunnel://domain[:port]</code></li><li><strong>WebSocket</strong>: <code>ws[s]://domain[:port]/path/to</code></li><li><strong>Normal HTTP/HTTPS</strong>: <code>http[s]://domain[:port]/path/to</code></li></ol></blockquote></li></ul></li><li><strong>Operation instruction</strong> (<code>operation</code>), format: <code>protocol://value</code><ul><li><code>protocol</code>: Operation type, e.g.:</li><li><code>reqHeaders</code>: Modify request headers</li><li><code>resHeaders</code>: Modify response headers</li><li><code>value</code>: Operation content, supports multiple data sources:</li><li>Inline value: <code>reqHeaders://x-proxy-by=whistle</code> (directly add request headers)</li><li>Local file: <code>file://path/to/file</code></li><li>Remote resource: <code>https://example.com/data.json</code></li><li>Default variable: <code>{key}</code> (read from embedded values or Values in Rules) <blockquote><p><code>protocol://</code> in <strong>operation</strong> can be omitted in the following two scenarios:</p><ul><li><code>ip</code> or <code>ip:port</code>: Equivalent to <code>host://ip</code> or <code>host://ip:port</code></li><li><code>D:\\path\\to</code>, <code>/path/to</code>, or <code>{key}</code>: Equivalent to <code>file://D:\\path\\to</code>, <code>file:///path/to</code>, or <code>file://{key}</code></li></ul></blockquote></li></ul></li><li><strong>Filter Conditions (Optional)</strong> (<code>includeFilter/excludeFilter</code>) <ul><li>Logical relationship: Multiple conditions are matched in an &quot;or&quot; fashion; a filter is considered valid if any one of the conditions matches.</li><li>Match scope:</li><li>Request: URL, method (GET/POST, etc.), header fields, content, client IP</li><li>Response: Status code, header fields, content, server IP</li></ul></li></ol><h4 id="example-1-modify-dns-set-hosts" tabindex="-1">Example 1: Modify DNS (Set Hosts) <a class="header-anchor" href="#example-1-modify-dns-set-hosts" aria-label="Permalink to &quot;Example 1: Modify DNS (Set Hosts)&quot;">​</a></h4><ol><li>Domain Matching<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.test.com 127.0.0.1</span></span>
<span class="line"><span># Supports with port</span></span>
<span class="line"><span>www.test.com 127.0.0.1:8080</span></span>
<span class="line"><span># CNAME function (port optional)</span></span>
<span class="line"><span>www.test.com host://www.example.com:8181</span></span></code></pre></div></li><li>Path Matching<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.test.com/path/to 127.0.0.1:8080</span></span>
<span class="line"><span># Supports with protocol</span></span>
<span class="line"><span>https://www.test.com/path/to 127.0.0.1:8080</span></span>
<span class="line"><span># Applies only to tunnel proxy requests</span></span>
<span class="line"><span>tunnel://* 127.0.0.1:8080</span></span></code></pre></div></li><li>Wildcard Matching<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Domain wildcard, matching all subdomains of test.com</span></span>
<span class="line"><span>**.test.com 127.0.0.1:8080</span></span>
<span class="line"><span># Supports domain wildcards with protocols</span></span>
<span class="line"><span>https://**.test.com 127.0.0.1:8080</span></span>
<span class="line"><span># Path wildcard (* is a valid path character, so add a leading ^ to indicate to Whistle that it is a wildcard)</span></span>
<span class="line"><span>^**.test.com/*/path/to 127.0.0.1:8080</span></span>
<span class="line"><span># Supports path wildcards with protocols</span></span>
<span class="line"><span>^https://**.test.com/*/path/to 127.0.0.1:8080</span></span></code></pre></div><blockquote><p><code>*</code>, <code>**</code>, and <code>***</code> have different matching scopes. See the documentation: <a href="./rules/pattern.html">pattern</a></p></blockquote></li><li>Regular Expression Matching<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># \`/\` in a rule regular expression Escape or not</span></span>
<span class="line"><span>/^https?://\\w+\\.test\\.com/ 127.0.0.1:8080</span></span></code></pre></div><blockquote><p><code>/regexp/x</code> is equivalent to <code>new RegExp(regexp, x)</code></p></blockquote></li><li>Filter Matching<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Request URL matches \`pattern\` and the request header \`cookie\` contains \`env=test\`</span></span>
<span class="line"><span>pattern 127.0.0.1:8080 includeFilter://reqH.cookie=/env=test/</span></span>
<span class="line"><span># Only applies to requests initiated from iPhones</span></span>
<span class="line"><span>https://www.test.com/path/to 127.0.0.1:8080 includeFilter://reqH.user-agent=/iPhone/i</span></span></code></pre></div></li></ol><h5 id="example-2-modifying-form-data" tabindex="-1">Example 2: Modifying Form Data <a class="header-anchor" href="#example-2-modifying-form-data" aria-label="Permalink to &quot;Example 2: Modifying Form Data&quot;">​</a></h5><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Modify the value of the \`test\` field in the form</span></span>
<span class="line"><span>pattern reqMerge://test=123</span></span>
<span class="line"><span># Delete the \`abc\` field in the form.</span></span>
<span class="line"><span>pattern delete://reqBody.abc</span></span></code></pre></div><h5 id="example-3-setting-a-cross-origin-response-header" tabindex="-1">Example 3: Setting a Cross-Origin Response Header <a class="header-anchor" href="#example-3-setting-a-cross-origin-response-header" aria-label="Permalink to &quot;Example 3: Setting a Cross-Origin Response Header&quot;">​</a></h5><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Set a cross-origin response header with Access-Control-Allow-Origin: * and exclude OPTION requests.</span></span>
<span class="line"><span>pattern resCors://* excludeFilter://m:option</span></span>
<span class="line"><span># Cross-origin request headers other than \`*\`</span></span>
<span class="line"><span>pattern resCors://enable</span></span></code></pre></div><h2 id="advanced-rule-configuration" tabindex="-1">Advanced Rule Configuration <a class="header-anchor" href="#advanced-rule-configuration" aria-label="Permalink to &quot;Advanced Rule Configuration&quot;">​</a></h2><ol><li>Combined Configuration<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern operation1 operation2 ... [includeFilter://pattern1 ... excludeFilter://patternN ...]</span></span></code></pre></div></li><li>Reversing Positions (<code>pattern1</code> and <code>operation</code> must not both be URLs or domain names) <blockquote><p>This means they must not both be URLs or domain names like <code>https://test.com/path</code>, <code>//test.com/path</code>, <code>test.com/path</code>, or <code>test.com</code>.</p></blockquote><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>operation pattern1 pattern2 ... [includeFilter://pattern1 ... excludeFilter://patternN ...]</span></span></code></pre></div></li><li>Line Break Configuration<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>line\`</span></span>
<span class="line"><span>operation</span></span>
<span class="line"><span>pattern1</span></span>
<span class="line"><span>pattern2</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>[includeFilter://pattern1</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>excludeFilter://patternN</span></span>
<span class="line"><span>...]</span></span>
<span class="line"><span>\`</span></span></code></pre></div><blockquote><p>Whistle will automatically replace line breaks within code blocks with spaces.</p></blockquote></li></ol><p>For complete functionality, see: <a href="./rules/pattern.html">Rule Configuration</a></p>`,28)]))}const v=o(c,[["render",r]]);export{k as __pageData,v as default};
