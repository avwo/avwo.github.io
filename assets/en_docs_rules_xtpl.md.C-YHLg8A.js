import{_ as t,c as a,o as l,ag as s}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"xtpl","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/xtpl.md","filePath":"en/docs/rules/xtpl.md"}'),r={name:"en/docs/rules/xtpl.md"};function n(i,e,o,p,h,d){return l(),a("div",null,e[0]||(e[0]=[s('<h1 id="xtpl" tabindex="-1">xtpl <a class="header-anchor" href="#xtpl" aria-label="Permalink to &quot;xtpl&quot;">​</a></h1><p>xtpl is a fall-through version of the <a href="./tpl.html">tpl</a> rule. The main difference lies in how it handles file non-existence:</p><ul><li>✅ If the file exists: Returns the local file contents (same behavior as the <a href="./tpl.html">tpl</a> rule)</li><li>❌ If the file does not exist: Continues with the normal network request (whereas the <a href="./tpl.html">tpl</a> rule returns a <code>404</code> error).</li></ul><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xtpl://value [filters...]</span></span></code></pre></div><p>For detailed usage, see: <a href="./tpl.html">tpl</a></p>',6)]))}const x=t(r,[["render",n]]);export{u as __pageData,x as default};
