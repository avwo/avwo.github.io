import{_ as t,c as e,o,ag as l}from"./chunks/framework.Bw-5EFTY.js";const m=JSON.parse('{"title":"locationHref","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/locationHref.md","filePath":"docs/rules/locationHref.md"}'),s={name:"docs/rules/locationHref.md"};function i(n,a,c,r,d,p){return o(),e("div",null,a[0]||(a[0]=[l(`<h1 id="locationhref" tabindex="-1">locationHref <a class="header-anchor" href="#locationhref" aria-label="Permalink to &quot;locationHref&quot;">​</a></h1><p>针对无法通过服务端重定向（<code>302</code>/<code>301</code>）的场景，通过在 HTML 页面中返回 JavaScript 代码 <code>window.location.href = targetUrl</code> 实现客户端跳转。特别适用于：</p><ul><li>本地HTML文件加载的APP页面</li><li>单页应用(SPA)</li><li>特殊框架开发的混合应用(Hybrid App)</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern locationHref://targetUrl [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>targetUrl</td><td>重定向后的 URL，可以是相对路径</td><td></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><h4 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path locationHref://https://www.qq.com</span></span>
<span class="line"><span></span></span>
<span class="line"><span>www.example.com/path2 locationHref://../abc/123</span></span></code></pre></div><ul><li>访问 <code>https://www.example.com/path/to</code> 重定向到 <code>https://www.qq.com</code>（不自动拼接路径）</li><li>访问 <code>https://www.example.com/path2/to</code> 重定向到 <code>https://www.example.com/abc/123</code></li></ul><h4 id="实现路径拼接" tabindex="-1">实现路径拼接 <a class="header-anchor" href="#实现路径拼接" aria-label="Permalink to &quot;实现路径拼接&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 通配符</span></span>
<span class="line"><span>^www.example.com/path/*** locationHref://\`https://www.example.com/$1\`</span></span></code></pre></div><ul><li>访问 <code>https://www.example.com/path/to?query</code> 重定向到 <code>https://www.example.com/to?query</code></li></ul><h2 id="关联协议" tabindex="-1">关联协议 <a class="header-anchor" href="#关联协议" aria-label="Permalink to &quot;关联协议&quot;">​</a></h2><ol><li>无法通过 <code>302</code> 修改地址的页面可用：<a href="./locationHref.html">locationHref</a></li></ol>`,15)]))}const u=t(s,[["render",i]]);export{m as __pageData,u as default};
