import{_ as e,c as a,o as n,ag as d}from"./chunks/framework.Bw-5EFTY.js";const h=JSON.parse('{"title":"tunnel","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/tunnel.md","filePath":"docs/rules/tunnel.md"}'),o={name:"docs/rules/tunnel.md"};function l(s,t,r,c,i,p){return n(),a("div",null,t[0]||(t[0]=[d(`<h1 id="tunnel" tabindex="-1">tunnel <a class="header-anchor" href="#tunnel" aria-label="Permalink to &quot;tunnel&quot;">​</a></h1><p>将隧道代理请求转发新的服务器。</p><blockquote><p>只支持隧道代理 <code>tunnel://domain:port</code>，不支持转换 WebSocket 请求和普通 HTTP/HTTPS</p></blockquote><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern tunnel://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配 WebSocket 请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>目标 URL 格式：<code>domain[:port]</code><br><code>port</code> 默认为 <code>443</code><br>⚠️ 不支持从文件/远程 URL 加载数据</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="tunnel-转换" tabindex="-1">TUNNEL 转换 <a class="header-anchor" href="#tunnel-转换" aria-label="Permalink to &quot;TUNNEL 转换&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tunnel://www.example.com tunnel://www.test.com:5678</span></span>
<span class="line"><span>tunnel://www.example2.com:8080 tunnel://www.test.com</span></span></code></pre></div><table tabindex="0"><thead><tr><th>原始请求</th><th>转换结果</th></tr></thead><tbody><tr><td><code>tunnel://www.example.com:443</code></td><td><code>tunnel://www.test.com:5678</code></td></tr><tr><td><code>tunnel://www.example2.com:8080</code></td><td><code>tunnel://www.test.com:443</code></td></tr></tbody></table><p>TUNNEL 请求不设计自动路径拼接和禁用路径拼接，其它请求匹配 <code>tunnel</code> 协议结果：</p><ul><li><strong>WebSocket 请求</strong>：忽略匹配</li><li><strong>普通 HTTP/HTTPS 请求</strong>：返回 <code>502</code></li></ul>`,11)]))}const b=e(o,[["render",l]]);export{h as __pageData,b as default};
