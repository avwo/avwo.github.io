import{_ as a,c as s,o as e,ag as o}from"./chunks/framework.Bw-5EFTY.js";const _=JSON.parse('{"title":"xhost","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/xhost.md","filePath":"docs/rules/xhost.md"}'),h={name:"docs/rules/xhost.md"};function l(r,t,i,n,c,d){return e(),s("div",null,t[0]||(t[0]=[o('<h1 id="xhost" tabindex="-1">xhost <a class="header-anchor" href="#xhost" aria-label="Permalink to &quot;xhost&quot;">​</a></h1><p>xhost 是 <a href="./host.html">host</a> 规则的穿透版本，主要区别在于请求失败时的处理方式：</p><ul><li>✅ 请求正常时：与 <a href="./host.html">host</a> 规则行为一致</li><li>❌ 请求出错时：忽略该匹配规则，继续正常网络请求（而 <a href="./host.html">host</a> 中断请求）</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xhost://value [filters...]</span></span></code></pre></div><p>详细用法参考：<a href="./host.html">host</a></p>',6)]))}const u=a(h,[["render",l]]);export{_ as __pageData,u as default};
