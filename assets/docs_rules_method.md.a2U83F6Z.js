import{_ as a,c as e,o as s,ag as d}from"./chunks/framework.Bw-5EFTY.js";const m=JSON.parse('{"title":"method","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/method.md","filePath":"docs/rules/method.md"}'),n={name:"docs/rules/method.md"};function o(p,t,l,r,h,i){return s(),e("div",null,t[0]||(t[0]=[d('<h1 id="method" tabindex="-1">method <a class="header-anchor" href="#method" aria-label="Permalink to &quot;method&quot;">​</a></h1><p>修改请求方法。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern method://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td><code>get</code>/<code>post</code>/<code>head</code> 等请求方法名称（不区分大小写）</td><td></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 访问 `https://www.example.com/path/to` 在 Whistle 抓包界面上可以看到请求方法为 `POST`</span></span>\n<span class="line"><span>www.example.com/path method://post</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 带过滤条件的方法修改</span></span>\n<span class="line"><span>www.example.com/path2 method://patch includeFilter://reqH.content-type=multipart/form-data</span></span></code></pre></div>',7)]))}const u=a(n,[["render",o]]);export{m as __pageData,u as default};
