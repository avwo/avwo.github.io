import{_ as t,c as a,o as s,ae as o}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"delete","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/delete.md","filePath":"en/docs/rules/delete.md"}'),n={name:"en/docs/rules/delete.md"};function l(i,e,r,d,p,c){return s(),a("div",null,e[0]||(e[0]=[o(`<h1 id="delete" tabindex="-1">delete <a class="header-anchor" href="#delete" aria-label="Permalink to &quot;delete&quot;">​</a></h1><p>Used to delete the request URL, request/response headers, and request/response content.</p><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern delete://prop1|prop2|... [filters...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Equivalent to:</span></span>
<span class="line"><span>pattern delete://prop1 delete://prop2 ... [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>Expression to match the request URL</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td><code>pathname</code>: Delete the request path (excluding request parameters)<br><code>pathname.index</code>: <code>index</code> is the path segment index <code>..., -1, 0, 1, ...</code> or the keyword <code>last</code> (see below for details)<br><code>urlParams</code>: Delete all request parameters<br><code>urlParams.xxx</code>: Delete the <code>xxx</code> parameter of the URL<br><code>reqHeaders.xxx</code>: Delete the <code>xxx</code> field of the request header<br><code>resHeaders.xxx</code>: Delete the <code>xxx</code> field of the response header<br><code>reqBody</code>: Delete all request content<br><code>resBody</code>: Delete all response content<br><code>reqBody.xxx.yyy</code>: Delete the <code>xxx.yyy</code> field of the request content whose type is form or JSON<br><code>resBody.xxx.yyy</code>: Delete the <code>xxx.yyy</code> field of the response content whose response type is JSONP or JSON<br><code>reqType</code>: Delete the type in the request header <code>content-type</code>, excluding the possible charset<br><code>resType</code>: Delete the type in the response header <code>content-type</code>, excluding the possible charset<br><code>reqCharset</code>: Delete the possible charset in the request header <code>content-type</code><br><code>resCharset</code>: Delete the possible charset in the response header <code>content-type</code><br><code>reqCookies.xxx</code>: Delete the request header named Cookies named <code>xxx</code><br><code>resCookies.xxx</code>: Deletes the cookie named <code>xxx</code> in the response header.</td><td></td></tr><tr><td>filters</td><td>Optional filters, supports matching:<br>• Request URL/Method/Header/Content<br>• Response Status Code/Header</td><td><a href="./filters.html">Filters Documentation</a></td></tr></tbody></table><h2 id="configuration-example" tabindex="-1">Configuration Example <a class="header-anchor" href="#configuration-example" aria-label="Permalink to &quot;Configuration Example&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.example.com/path delete://reqCookies.token|resCookies.token</span></span>
<span class="line"><span></span></span>
<span class="line"><span>https://raw.githubusercontent.com/avwo/whistle/refs/heads/master/package.json delete://resBody.name resType://json</span></span></code></pre></div><p>The above cookie deletion operation only affects cookies in the request/response process and does not modify cookies stored locally in the browser. To modify browser persistent cookies, you can do so in the following ways:</p><ul><li>Deleting them by injecting JavaScript using <a href="./jsPrepend.html">jsPrepend</a></li><li>Setting cookie expiration times using <a href="./resCookies.html">resCookies</a></li></ul><h2 id="deleting-paths" tabindex="-1">Deleting Paths <a class="header-anchor" href="#deleting-paths" aria-label="Permalink to &quot;Deleting Paths&quot;">​</a></h2><blockquote><p>Supported versions: v2.9.102 and above</p></blockquote><h3 id="rule-syntax-1" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax-1" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Basic Format</span></span>
<span class="line"><span>Target Domain delete://pathname.index</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Example</span></span>
<span class="line"><span>www.example.com/api/path/to delete://pathname.0 delete://pathname.1 delete://pathname.-1</span></span></code></pre></div><h3 id="rule-description" tabindex="-1">Rule Description <a class="header-anchor" href="#rule-description" aria-label="Permalink to &quot;Rule Description&quot;">​</a></h3><p>This rule deletes specific segments of the request URL&#39;s path. Whistle extracts the request path excluding query parameters, delimits it by <code>/</code>, and then deletes it.</p><p><strong>Example Parsing:</strong></p><ul><li>Request URL: <code>https://www.example.com/api/path/to/xxx?query</code></li><li>Extracted Path: <code>api/path/to/xxx</code></li><li>Split Array: <code>[&#39;api&#39;, &#39;path&#39;, &#39;to&#39;, &#39;xxx&#39;]</code></li><li>Apply Rules: <ul><li><code>delete://pathname.0</code> → Delete &#39;api&#39;</li><li><code>delete://pathname.1</code> → Delete &#39;path&#39;</li><li><code>delete://pathname.-1</code> → Delete &#39;xxx&#39;</li></ul></li><li>Final Path: <code>/to</code></li><li>Complete Result: <code>https://www.example.com/to?query</code></li></ul><h3 id="indexing-rules" tabindex="-1">Indexing Rules <a class="header-anchor" href="#indexing-rules" aria-label="Permalink to &quot;Indexing Rules&quot;">​</a></h3><ul><li><strong>Positive Index</strong>: Starting at 0, indicating order from front to back</li><li><strong>Negative Index</strong>: Starting at -1, indicating order from back to front (-1 = last segment, -2 = second to last segment, and so on)</li><li><strong>Special Value</strong>: Use <code>last</code> removes the last segment of a path but preserves the trailing slash.</li><li><strong>Border case</strong>: Out-of-range indices are ignored.</li></ul><h3 id="important-note" tabindex="-1">Important Note <a class="header-anchor" href="#important-note" aria-label="Permalink to &quot;Important Note&quot;">​</a></h3><p>When a path ends with <code>/</code>, the split array will contain an empty string item at the end:</p><ul><li>Path: <code>/api/path/to/xxx/</code></li><li>Split result: <code>[&#39;api&#39;, &#39;path&#39;, &#39;to&#39;, &#39;xxx&#39;, &#39;&#39;]</code></li></ul><h3 id="usage-tips" tabindex="-1">Usage Tips <a class="header-anchor" href="#usage-tips" aria-label="Permalink to &quot;Usage Tips&quot;">​</a></h3><ul><li>Use <code>pathname.-1</code> to remove the last segment without preserving the trailing slash.</li><li>Use <code>pathname.last</code> to remove the last segment but preserve the trailing slash.</li></ul><p><strong>Comparison example:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/api/path/to delete://pathname.0 delete://pathname.1 delete://pathname.last</span></span></code></pre></div><ul><li>Request: <code>https://www.example.com/api/path/to/xxx?query</code></li><li>Result: <code>https://www.example.com/to/?query</code> (preserves the trailing slash)</li></ul>`,27)]))}const x=t(n,[["render",l]]);export{u as __pageData,x as default};
