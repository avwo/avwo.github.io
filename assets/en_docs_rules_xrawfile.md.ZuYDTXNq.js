import{_ as a,c as t,o as r,ae as l}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"xrawfile","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/xrawfile.md","filePath":"en/docs/rules/xrawfile.md"}'),i={name:"en/docs/rules/xrawfile.md"};function s(n,e,o,f,h,d){return r(),t("div",null,e[0]||(e[0]=[l('<h1 id="xrawfile" tabindex="-1">xrawfile <a class="header-anchor" href="#xrawfile" aria-label="Permalink to &quot;xrawfile&quot;">​</a></h1><p>xrawfile is a pass-through version of the <a href="./rawfile.html">rawfile</a> rule, differing primarily in how it handles file non-existence:</p><ul><li>✅ If the file exists: Returns the local file contents (same behavior as the <a href="./rawfile.html">rawfile</a> rule)</li><li>❌ If the file does not exist: Continues with the normal network request (whereas the <a href="./rawfile.html">rawfile</a> rule returns a <code>404</code> error).</li></ul><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xrawfile://value [filters...]</span></span></code></pre></div><p>For detailed usage, see: <a href="./rawfile.html">rawfile</a></p>',6)]))}const p=a(i,[["render",s]]);export{u as __pageData,p as default};
