import{_ as a,c as t,o as s,ag as p}from"./chunks/framework.Bw-5EFTY.js";const m=JSON.parse('{"title":"headerReplace","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/headerReplace.md","filePath":"docs/rules/headerReplace.md"}'),r={name:"docs/rules/headerReplace.md"};function l(n,e,d,c,h,o){return s(),t("div",null,e[0]||(e[0]=[p('<h1 id="headerreplace" tabindex="-1">headerReplace <a class="header-anchor" href="#headerreplace" aria-label="Permalink to &quot;headerReplace&quot;">​</a></h1><p>通过关键字匹配或正则表达式替换指定请求头/响应头。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern headerReplace://value [filters...]</span></span></code></pre></div><blockquote><p><code>header-name</code> 不区分大小写</p></blockquote><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>三种情况：<br>• <code>req.header-name:p1=v1&amp;p2=v2</code><br>• <code>res.header-name:p1=v1&amp;p2=v2</code><br>• <code>trailer.trailer-name:p1=v1&amp;p2=v2</code></td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 请求头 `accept` 字段值的第一个 `html` 关键字被改成 `abc`</span></span>\n<span class="line"><span>www.example.com/path headerReplace://req.accept:html=abc</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 请求头 `accept` 字段值的所有 `ml` 关键字被改成 `abc`</span></span>\n<span class="line"><span>www.example.com/path2 headerReplace://req.accept:/ml/g=abc</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 修改响应头</span></span>\n<span class="line"><span>www.example.com/path3 headerReplace://res.Content-Type:html=plain</span></span></code></pre></div><p><code>headerReplace</code> 是用来替换请求/响应头的局部内容，如果要修改请求/响应字段内容，还可以用：</p><ul><li>设置请求头：<a href="./reqHeaders.html">reqHeaders</a></li><li>设置响应头：<a href="./resHeaders.html">resHeaders</a></li></ul>',10)]))}const b=a(r,[["render",l]]);export{m as __pageData,b as default};
