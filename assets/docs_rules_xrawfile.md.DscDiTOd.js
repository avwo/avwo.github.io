import{_ as e,c as l,o as r,ag as t}from"./chunks/framework.Bw-5EFTY.js";const h=JSON.parse('{"title":"xrawfile","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/xrawfile.md","filePath":"docs/rules/xrawfile.md"}'),i={name:"docs/rules/xrawfile.md"};function s(o,a,n,f,c,d){return r(),l("div",null,a[0]||(a[0]=[t('<h1 id="xrawfile" tabindex="-1">xrawfile <a class="header-anchor" href="#xrawfile" aria-label="Permalink to &quot;xrawfile&quot;">​</a></h1><p>xrawfile 是 <a href="./rawfile.html">rawfile</a> 规则的穿透版本，主要区别在于文件不存在时的处理方式：</p><ul><li>✅ 文件存在时：返回本地文件内容（与 <a href="./rawfile.html">rawfile</a> 规则行为一致）</li><li>❌ 文件不存在时：继续正常网络请求（而 <a href="./rawfile.html">rawfile</a> 规则会返回 <code>404</code>）</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xrawfile://value [filters...]</span></span></code></pre></div><p>详细用法参考：<a href="./rawfile.html">rawfile</a></p>',6)]))}const _=e(i,[["render",s]]);export{h as __pageData,_ as default};
