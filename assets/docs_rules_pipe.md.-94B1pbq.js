import{_ as t,c as a,o as p,ag as s}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"pipe","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/pipe.md","filePath":"docs/rules/pipe.md"}'),n={name:"docs/rules/pipe.md"};function i(l,e,d,o,r,c){return p(),a("div",null,e[0]||(e[0]=[s(`<h1 id="pipe" tabindex="-1">pipe <a class="header-anchor" href="#pipe" aria-label="Permalink to &quot;pipe&quot;">​</a></h1><p>将 HTTP/HTTPS/WebSocket/TUNNEL 请求/响应数据流交给插件处理。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern pipe://plugin-name(pipeValue) [filters...]</span></span></code></pre></div><blockquote><p><code>(pipeValue)</code> 可选，在插件 Hook 可以通过 <code>req.originalReq.pipeValue</code> 获取</p></blockquote><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>plugin-name(pipeValue)</td><td>插件名称 + 可选参数</td><td></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tunnel://wwww.example.com pipe://test</span></span>
<span class="line"><span>tunnel://test-tunnel.example.com pipe://test-pipe-tunnel(abc)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>wss://test-ws.example.com/path pipe://test-pipe-ws</span></span>
<span class="line"><span></span></span>
<span class="line"><span>https://www.example.com/path pipe://test-pipe-http(123)</span></span></code></pre></div><p>具体用法参考：<a href="./../extensions/dev.html#pipe">插件开发文档</a></p>`,9)]))}const m=t(n,[["render",i]]);export{u as __pageData,m as default};
