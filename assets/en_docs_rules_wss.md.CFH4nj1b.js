import{_ as e,c as a,o as s,ae as o}from"./chunks/framework.Dgg8-8ov.js";const w=JSON.parse('{"title":"wss","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/wss.md","filePath":"en/docs/rules/wss.md"}'),r={name:"en/docs/rules/wss.md"};function n(d,t,c,i,l,p){return s(),a("div",null,t[0]||(t[0]=[o(`<h1 id="wss" tabindex="-1">wss <a class="header-anchor" href="#wss" aria-label="Permalink to &quot;wss&quot;">​</a></h1><p>Converts a WebSocket request into a new wss request (the server will receive the converted WebSocket URL).</p><blockquote><p>Only supports WebSocket requests <code>ws[s]://domain[:port]/[path][?query]</code>. Transformation tunneling proxies and regular HTTP/HTTPS are not supported.</p></blockquote><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern wss://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>Expression to match WebSocket request URLs</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td>Target URL format: <code>domain[:port]/[path][?query]</code><br>⚠️ Loading data from files/remote URLs is not supported</td><td><a href="./operation.html">Operation Instruction Documentation</a></td></tr><tr><td>filters</td><td>Optional filters, supporting matching:<br>• Request URL/Method/Headers/Content<br>• Response Status Code/Headers</td><td><a href="./filters.html">Filters Documentation</a></td></tr></tbody></table><h2 id="websocket-transformation" tabindex="-1">WebSocket Transformation <a class="header-anchor" href="#websocket-transformation" aria-label="Permalink to &quot;WebSocket Transformation&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ws://www.example.com/path1 wss://www.test.com/path/xxx</span></span>
<span class="line"><span>wss://www.example.com/path2 wss://www.abc.com/path3/yyy</span></span></code></pre></div><ol><li>Automatic path concatenation:<table tabindex="0"><thead><tr><th>Original request</th><th>Conversion result (URL received by the server)</th></tr></thead><tbody><tr><td><code>ws://www.example.com/path1</code></td><td><code>wss://www.test.com/path/xxx</code></td></tr><tr><td><code>ws://www.example.com/path1/a/b/c?query</code></td><td><code>wss://www.test.com/path/xxx/a/b/c?query</code></td></tr><tr><td><code>wss://www.example.com/path2</code></td><td><code>wss://www.abc.com/path3/yyy</code></td></tr><tr><td><code>wss://www.example.com/path2/a/b/c?query</code></td><td><code>wss://www.abc.com/path3/yyy/a/b/c?query</code></td></tr></tbody></table></li><li>Disable path concatenation: Use <code>&lt; &gt;</code> or <code>()</code> to wrap the path.<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path1 wss://&lt;www.test.com/path/xxx&gt;</span></span>
<span class="line"><span># www.example.com/path1 wss://(www.test.com/path/xxx)</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Original Request</th><th>Conversion Result (URL Received by the Server)</th></tr></thead><tbody><tr><td><code>[wss/ws]://www.example.com/path/x/y/z</code></td><td><code>wss://www.test.com/path/xxx</code></td></tr></tbody></table></li></ol><p>Only supports forwarding WebSocket requests; other requests match the <code>wss</code> protocol. Result:</p><ul><li><strong>Tunnel Proxy</strong>: Ignore matches</li><li><strong>Normal HTTP/HTTPS Request</strong>: Returns <code>502</code></li></ul>`,11)]))}const u=e(r,[["render",n]]);export{w as __pageData,u as default};
