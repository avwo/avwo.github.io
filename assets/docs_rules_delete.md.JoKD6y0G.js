import{_ as a,c as t,o,ag as s}from"./chunks/framework.Bw-5EFTY.js";const x=JSON.parse('{"title":"delete","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/delete.md","filePath":"docs/rules/delete.md"}'),d={name:"docs/rules/delete.md"};function l(c,e,n,i,p,r){return o(),t("div",null,e[0]||(e[0]=[s(`<h1 id="delete" tabindex="-1">delete <a class="header-anchor" href="#delete" aria-label="Permalink to &quot;delete&quot;">​</a></h1><p>用于删除请求 URL、请求/响应头、请求/响应内容。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern delete://prop1|prop2|... [filters...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 等效于：</span></span>
<span class="line"><span>pattern delete://prop1 delete://prop2 ... [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td><code>pathname</code>：删除请求路径（不包含请求参数）<br><code>pathname.index</code>：<code>index</code> 为路径分段序号 <code>...、-1、0、1、...</code> 或关键字 <code>last</code> 详见下面说明<br><code>urlParams</code>：删除所有请求参数<br><code>urlParams.xxx</code>：删除 URL 的 <code>xxx 参数</code><br><code>reqHeaders.xxx</code>: 删除请求头的 <code>xxx</code> 字段<br><code>resHeaders.xxx</code>: 删除响应头的 <code>xxx</code> 字段<br><code>reqBody</code>: 删除所有请求内容<br><code>resBody</code>: 删除所有响应内容<br><code>reqBody.xxx.yyy</code>: 删除请求内容中类型为表单(form)或JSON的 <code>xxx.yyy</code> 字段<br><code>resBody.xxx.yyy</code>: 删除响应类型为 JSONP 或 JSON 的响应内容里的 <code>xxx.yyy</code> 字段<br><code>reqType</code>: 删除请求头 <code>content-type</code> 里的类型，不包含可能存在的 charset<br><code>resType</code>: 删除响应头 <code>content-type</code> 里的类型，不包含可能存在的 charset<br><code>reqCharset</code>: 删除请求头 <code>content-type</code> 里可能存在的 charset<br><code>resCharset</code>: 删除响应头 <code>content-type</code> 里可能存在的 charset<br><code>reqCookies.xxx</code>: 删除请求头的里面名为 <code>xxx</code> 的 cookie<br><code>resCookies.xxx</code>: 删除响应头的里面名为 <code>xxx</code> 的 cookie</td><td></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.example.com/path delete://reqCookies.token|resCookies.token</span></span>
<span class="line"><span></span></span>
<span class="line"><span>https://raw.githubusercontent.com/avwo/whistle/refs/heads/master/package.json delete://resBody.name resType://json</span></span></code></pre></div><p>上述 cookie 删除操作仅作用于请求/响应过程中的 cookie，不会修改浏览器本地存储的 cookie。如需修改浏览器持久化 cookie，可通过以下方式实现：</p><ul><li>通过 <a href="./jsPrepend.html">jsPrepend</a> 等注入 JS 删除</li><li>通过 <a href="./resCookies.html">resCookies</a> 设置 cookie 过期</li></ul><h2 id="删除路径" tabindex="-1">删除路径 <a class="header-anchor" href="#删除路径" aria-label="Permalink to &quot;删除路径&quot;">​</a></h2><blockquote><p>支持版本：v2.9.102 及以上</p></blockquote><h3 id="规则语法-1" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法-1" aria-label="Permalink to &quot;规则语法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 基本格式</span></span>
<span class="line"><span>目标域名 delete://pathname.索引号</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 示例</span></span>
<span class="line"><span>www.example.com/api/path/to delete://pathname.0 delete://pathname.1 delete://pathname.-1</span></span></code></pre></div><h3 id="规则说明" tabindex="-1">规则说明 <a class="header-anchor" href="#规则说明" aria-label="Permalink to &quot;规则说明&quot;">​</a></h3><p>该规则用于删除请求 URL 中路径的特定分段。Whistle 会提取不包含查询参数的请求路径，并通过 <code>/</code> 分割成数组后进行删除操作。</p><p><strong>示例解析：</strong></p><ul><li>请求URL：<code>https://www.example.com/api/path/to/xxx?query</code></li><li>提取路径：<code>api/path/to/xxx</code></li><li>分割数组：<code>[&#39;api&#39;, &#39;path&#39;, &#39;to&#39;, &#39;xxx&#39;]</code></li><li>应用规则： <ul><li><code>delete://pathname.0</code> → 删除 &#39;api&#39;</li><li><code>delete://pathname.1</code> → 删除 &#39;path&#39;</li><li><code>delete://pathname.-1</code> → 删除 &#39;xxx&#39;</li></ul></li><li>最终路径：<code>/to</code></li><li>完整结果：<code>https://www.example.com/to?query</code></li></ul><h3 id="索引规则" tabindex="-1">索引规则 <a class="header-anchor" href="#索引规则" aria-label="Permalink to &quot;索引规则&quot;">​</a></h3><ul><li><strong>正数索引</strong>：从 0 开始，表示从前往后的顺序</li><li><strong>负数索引</strong>：从 -1 开始，表示从后往前的位置（-1 = 最后一段，-2 = 倒数第二段，以此类推）</li><li><strong>特殊值</strong>：使用 <code>last</code> 可删除最后一段路径但保留末尾斜杠</li><li><strong>边界情况</strong>：超出数组范围的索引将被忽略</li></ul><h3 id="重要说明" tabindex="-1">重要说明 <a class="header-anchor" href="#重要说明" aria-label="Permalink to &quot;重要说明&quot;">​</a></h3><p>当路径以 <code>/</code> 结尾时，分割后的数组最后会包含一个空字符串项：</p><ul><li>路径：<code>/api/path/to/xxx/</code></li><li>分割结果：<code>[&#39;api&#39;, &#39;path&#39;, &#39;to&#39;, &#39;xxx&#39;, &#39;&#39;]</code></li></ul><h3 id="使用建议" tabindex="-1">使用建议 <a class="header-anchor" href="#使用建议" aria-label="Permalink to &quot;使用建议&quot;">​</a></h3><ul><li>使用 <code>pathname.-1</code> 删除最后一段且不保留末尾斜杠</li><li>使用 <code>pathname.last</code> 删除最后一段但保留末尾斜杠</li></ul><p><strong>对比示例：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/api/path/to delete://pathname.0 delete://pathname.1 delete://pathname.last</span></span></code></pre></div><ul><li>请求：<code>https://www.example.com/api/path/to/xxx?query</code></li><li>结果：<code>https://www.example.com/to/?query</code> (保留末尾斜杠)</li></ul>`,27)]))}const u=a(d,[["render",l]]);export{x as __pageData,u as default};
