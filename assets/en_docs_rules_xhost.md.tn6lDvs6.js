import{_ as t,c as a,o as s,ag as o}from"./chunks/framework.Bw-5EFTY.js";const p=JSON.parse('{"title":"xhost","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/xhost.md","filePath":"en/docs/rules/xhost.md"}'),r={name:"en/docs/rules/xhost.md"};function h(l,e,n,i,u,d){return s(),a("div",null,e[0]||(e[0]=[o('<h1 id="xhost" tabindex="-1">xhost <a class="header-anchor" href="#xhost" aria-label="Permalink to &quot;xhost&quot;">​</a></h1><p>xhost is a pass-through version of the <a href="./host.html">host</a> rule. The main difference lies in how it handles request failures:</p><ul><li>✅ Request normal: Behaves the same as the <a href="./host.html">host</a> rule</li><li>❌ Request error: Ignore the matching rule and continue the normal network request (while <a href="./host.html">host</a> aborts the request).</li></ul><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xhost://value [filters...]</span></span></code></pre></div><p>For detailed usage, see: <a href="./host.html">host</a></p>',6)]))}const x=t(r,[["render",h]]);export{p as __pageData,x as default};
