import{_ as e,c as a,o as s,ag as o}from"./chunks/framework.Bw-5EFTY.js";const w=JSON.parse('{"title":"Protocol Inheritance","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/inherit.md","filePath":"en/docs/rules/inherit.md"}'),n={name:"en/docs/rules/inherit.md"};function c(d,t,p,r,i,h){return s(),a("div",null,t[0]||(t[0]=[o(`<h1 id="protocol-inheritance" tabindex="-1">Protocol Inheritance <a class="header-anchor" href="#protocol-inheritance" aria-label="Permalink to &quot;Protocol Inheritance&quot;">​</a></h1><p><a href="./http.html">http</a>/<a href="./https.html">https</a>/<a href="./ws.html">ws</a>/<a href="./wss.html">wss</a>/<a href="./tunnel.html">tunnel</a> all restrict the target URL&#39;s protocol. Whistle also supports automatic completion based on the request URL&#39;s protocol.</p><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern //value [filters...]</span></span>
<span class="line"><span># or</span></span>
<span class="line"><span>pattern value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>Expression to match request URLs</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td>Target URL format: <code>domain[:port]/[path][?query]</code><br>⚠️ Loading data from files/remote URLs is not supported</td><td><a href="./operation.html">Operation Instruction Documentation</a></td></tr><tr><td>filters</td><td>Optional filters, supports matching:<br>• Request URL/Method/Header/Content<br>• Response Status Code/Header</td><td><a href="./filters.html">Filter Documentation</a></td></tr></tbody></table><h2 id="http-https-conversion" tabindex="-1">HTTP/HTTPS Conversion <a class="header-anchor" href="#http-https-conversion" aria-label="Permalink to &quot;HTTP/HTTPS Conversion&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://www.example.com/path1 www.test.com/path/xxx</span></span>
<span class="line"><span>https://www.example.com/path2 www.abc.com/path3/yyy</span></span></code></pre></div><ol><li>Automatic path concatenation:<table tabindex="0"><thead><tr><th>Original request</th><th>Conversion result (URL received by the server)</th></tr></thead><tbody><tr><td><code>http://www.example.com/path1</code></td><td><code>http://www.test.com/path/xxx</code></td></tr><tr><td><code>http://www.example.com/path1/a/b/c?query</code></td><td><code>http://www.test.com/path/xxx/a/b/c?query</code></td></tr><tr><td><code>https://www.example.com/path2</code></td><td><code>https://www.abc.com/path3/yyy</code></td></tr><tr><td><code>https://www.example.com/path2/a/b/c?query</code></td><td><code>https://www.abc.com/path3/yyy/a/b/c?query</code></td></tr></tbody></table></li><li>Disable path concatenation: Use <code>&lt; &gt;</code> or <code>()</code> to wrap the path.<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path1 //&lt;www.test.com/path/xxx&gt;</span></span>
<span class="line"><span># www.example.com/path1</span><span> //(www.test.com/path/xxx)</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Original Request</th><th>Conversion Result (URL Received by the Server)</th></tr></thead><tbody><tr><td><code>[http/https/wss/ws]://www.example.com/path/x/y/z</code></td><td><code>[http/https/wss/ws]://www.test.com/path/xxx</code></td></tr></tbody></table></li></ol><h2 id="websocket-conversion" tabindex="-1">WebSocket Conversion <a class="header-anchor" href="#websocket-conversion" aria-label="Permalink to &quot;WebSocket Conversion&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ws://www.example.com/path1 www.test.com/path/xxx</span></span>
<span class="line"><span>wss://www.example.com/path2 www.abc.com/path3/yyy</span></span></code></pre></div><p>The WebSocket request is replaced with the specified ws request:</p><table tabindex="0"><thead><tr><th>Original Request</th><th>Conversion Result (URL Received by the Server)</th></tr></thead><tbody><tr><td><code>ws://www.example.com/path1</code></td><td><code>ws://www.test.com/path/xxx</code></td></tr><tr><td><code>wss://www.example.com/path2/a/b/c?query</code></td><td><code>wss://www.abc.com/path3/yyy/a/b/c?query</code></td></tr></tbody></table><p>Also supports <strong>automatic path concatenation</strong> and <strong>disabling path concatenation</strong>.</p><h2 id="tunnel-conversion" tabindex="-1">TUNNEL Conversion <a class="header-anchor" href="#tunnel-conversion" aria-label="Permalink to &quot;TUNNEL Conversion&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tunnel://www.example.com:443 //www.test.com:123</span></span>
<span class="line"><span>tunnel://www.example2.com:443 www.test2.com/path</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Original Request</th><th>Conversion Result (URL Received by the Server)</th></tr></thead><tbody><tr><td><code>tunnel://www.example.com:443</code></td><td><code>tunnel://www.test.com:123</code></td></tr><tr><td><code>tunnel://www.example2.com:443</code></td><td><code>tunnel://www.test2.com:443</code></td></tr></tbody></table>`,16)]))}const m=e(n,[["render",c]]);export{w as __pageData,m as default};
