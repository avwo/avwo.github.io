import{_ as e,c as a,o as s,ag as o}from"./chunks/framework.Bw-5EFTY.js";const i=JSON.parse('{"title":"wss","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/wss.md","filePath":"docs/rules/wss.md"}'),d={name:"docs/rules/wss.md"};function c(p,t,l,r,n,w){return s(),a("div",null,t[0]||(t[0]=[o(`<h1 id="wss" tabindex="-1">wss <a class="header-anchor" href="#wss" aria-label="Permalink to &quot;wss&quot;">​</a></h1><p>将 WebSocket 请求转换为新的 wss 请求（服务端将收到转换后的 WebSocket URL）。</p><blockquote><p>只支持 WebSocket 请求 <code>ws[s]://domain[:port]/[path][?query]</code>，不支持转换隧道代理和普通 HTTP/HTTPS</p></blockquote><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern wss://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配 WebSocket 请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>目标 URL 格式：<code>domain[:port]/[path][?query]</code><br>⚠️ 不支持从文件/远程 URL 加载数据</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="websocket-转换" tabindex="-1">WebSocket 转换 <a class="header-anchor" href="#websocket-转换" aria-label="Permalink to &quot;WebSocket 转换&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ws://www.example.com/path1 wss://www.test.com/path/xxx</span></span>
<span class="line"><span>wss://www.example.com/path2 wss://www.abc.com/path3/yyy</span></span></code></pre></div><ol><li>自动路径拼接：<table tabindex="0"><thead><tr><th>原始请求</th><th>转换结果（服务端收到的 URL）</th></tr></thead><tbody><tr><td><code>ws://www.example.com/path1</code></td><td><code>wss://www.test.com/path/xxx</code></td></tr><tr><td><code>ws://www.example.com/path1/a/b/c?query</code></td><td><code>wss://www.test.com/path/xxx/a/b/c?query</code></td></tr><tr><td><code>wss://www.example.com/path2</code></td><td><code>wss://www.abc.com/path3/yyy</code></td></tr><tr><td><code>wss://www.example.com/path2/a/b/c?query</code></td><td><code>wss://www.abc.com/path3/yyy/a/b/c?query</code></td></tr></tbody></table></li><li>禁用路径拼接：使用 <code>&lt; &gt;</code> 或 <code>( )</code> 包裹路径<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path1 wss://&lt;www.test.com/path/xxx&gt;</span></span>
<span class="line"><span># www.example.com/path1 wss://(www.test.com/path/xxx)</span></span></code></pre></div><table tabindex="0"><thead><tr><th>原始请求</th><th>转换结果（服务端收到的 URL）</th></tr></thead><tbody><tr><td><code>[wss/ws]://www.example.com/path/x/y/z</code></td><td><code>wss://www.test.com/path/xxx</code></td></tr></tbody></table></li></ol><p>只支持转发 WebSocket 请求，其它请求匹配 <code>wss</code> 协议结果：</p><ul><li><strong>隧道代理</strong>：忽略匹配</li><li><strong>普通 HTTP/HTTPS 请求</strong>：返回 <code>502</code></li></ul>`,11)]))}const b=e(d,[["render",c]]);export{i as __pageData,b as default};
