import{_ as a,c as t,o,ag as s}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"proxy (http-proxy)","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/proxy.md","filePath":"en/docs/rules/proxy.md"}'),n={name:"en/docs/rules/proxy.md"};function p(r,e,i,l,d,c){return o(),t("div",null,e[0]||(e[0]=[s(`<h1 id="proxy-http-proxy" tabindex="-1">proxy (http-proxy) <a class="header-anchor" href="#proxy-http-proxy" aria-label="Permalink to &quot;proxy (http-proxy)&quot;">​</a></h1><p>The <code>proxy</code> (or <code>http-proxy</code>) directive forwards matching requests through a specified HTTP proxy server. These two directives have identical functionality and can be used interchangeably.</p><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern proxy://ipOrDomain[:port] [filters...]</span></span>
<span class="line"><span># Equivalent:</span></span>
<span class="line"><span>pattern http-proxy://ipOrDomain[:port] [filters...]</span></span></code></pre></div><blockquote><p><code>port</code> is optional. If left blank, the default port <code>80</code> will be used.</p></blockquote><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>An expression to match the request URL</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td>IP + optional port or domain name + optional port<br>⚠️ Loading data from files/remote URLs is not supported</td><td><a href="./operation.html">Operation Instruction Documentation</a></td></tr><tr><td>filters</td><td>Optional filters. Supports matching:<br>• Request URL/Method/Headers/Content<br>• Response Status Code/Headers</td><td><a href="./filters.html">Filter Documentation</a></td></tr></tbody></table><h2 id="configuration-example" tabindex="-1">Configuration Example <a class="header-anchor" href="#configuration-example" aria-label="Permalink to &quot;Configuration Example&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Proxy requests to the HTTP proxy: \`127.0.0.1:80\`</span></span>
<span class="line"><span>www.example.com/path proxy://127.0.0.1 # Default port 80</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Proxy all requests for the current domain to the HTTP proxy: \`127.0.0.1:8080\`</span></span>
<span class="line"><span>www.example.com proxy://127.0.0.1:8080</span></span>
<span class="line"><span></span></span>
<span class="line"><span># You can also use a domain name.</span></span>
<span class="line"><span>www.example.com/path proxy://test.proxy.com # Default port 80</span></span>
<span class="line"><span>www.example.com proxy://test.proxy.com:8080</span></span></code></pre></div><h2 id="advanced-usage" tabindex="-1">Advanced Usage <a class="header-anchor" href="#advanced-usage" aria-label="Permalink to &quot;Advanced Usage&quot;">​</a></h2><p>After proxying a request to the upstream proxy, by default the upstream proxy will use DNS to obtain the server IP address based on the requested domain name before continuing the request. If you want the upstream proxy to continue the request based on a specific IP address and port, you can do this:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Using query parameters</span></span>
<span class="line"><span>www.example.com proxy://127.0.0.1:8080?host=1.1.1.1</span></span>
<span class="line"><span>www.example.com proxy://127.0.0.1:8080?host=1.1.1.1:8080</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Enable via directive</span></span>
<span class="line"><span>www.example.com proxy://127.0.0.1:8080 1.1.1.1 enable://proxyHost</span></span>
<span class="line"><span>www.example.com proxy://127.0.0.1:8080 1.1.1.1:8080 enable://proxyHost</span></span></code></pre></div><blockquote><p><code>1.1.1.1</code> is equivalent to <code>host://1.1.1.1</code></p></blockquote><h2 id="matching-precedence-with-host" tabindex="-1">Matching precedence with <code>host</code> <a class="header-anchor" href="#matching-precedence-with-host" aria-label="Permalink to &quot;Matching precedence with \`host\`&quot;">​</a></h2><h4 id="default-behavior" tabindex="-1">Default behavior <a class="header-anchor" href="#default-behavior" aria-label="Permalink to &quot;Default behavior&quot;">​</a></h4><p>When a request matches both <code>host</code> and <code>proxy</code> rules:</p><ul><li>Only the <code>host</code> rule takes effect</li><li>The <code>proxy</code> rule is automatically ignored</li></ul><h4 id="modify-priority" tabindex="-1">Modify Priority <a class="header-anchor" href="#modify-priority" aria-label="Permalink to &quot;Modify Priority&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Configuration Method</th><th>Syntax</th><th>Effect</th></tr></thead><tbody><tr><td><strong>Prioritize proxy</strong></td><td><a href="./enable.html"><code>enable://proxyFirst</code></a> or <a href="./lineProps.html"><code>lineProps://proxyFirst</code></a></td><td>Only <code>proxy</code> takes effect (overrides <code>host</code>)</td></tr><tr><td><strong>Both take effect</strong></td><td><a href="./enable.html"><code>enable://proxyHost</code></a> or <a href="./lineProps.html"><code>lineProps://proxyHost</code></a></td><td>Both <code>proxy</code> and <code>host</code> take effect</td></tr></tbody></table><h4 id="usage-recommendations" tabindex="-1">Usage Recommendations <a class="header-anchor" href="#usage-recommendations" aria-label="Permalink to &quot;Usage Recommendations&quot;">​</a></h4><ul><li>Use the default behavior in most scenarios</li><li>Use <code>proxyFirst</code> only when special proxy logic is required</li><li>Use <code>proxyHost</code> when dual matching is required</li></ul><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><p>The <code>host</code> protocol only applies to the substituted URL (i.e., the <code>Final URL</code> shown in the Overview). If the <code>Final URL</code> is empty, it will take effect on the original request URL.</p><p>For example, with the rule:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/api www.example.com 127.0.0.1:1234</span></span></code></pre></div><p>A request to <code>https://www.example.com/api/path</code> will be processed by Whistle, and the <code>Final URL</code> becomes <code>https://www.example.com/path</code>. As a result, it will not match <code>127.0.0.1:1234</code>.</p><p>If you want to match the substituted request, you can modify the rules as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/api www.example.com  </span></span>
<span class="line"><span>www.example.com 127.0.0.1:1234</span></span></code></pre></div>`,27)]))}const m=a(n,[["render",p]]);export{u as __pageData,m as default};
