import{_ as e,c as a,o as s,ae as r}from"./chunks/framework.Dgg8-8ov.js";const d=JSON.parse('{"title":"xhttps-proxy","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/xhttps-proxy.md","filePath":"en/docs/rules/xhttps-proxy.md"}'),o={name:"en/docs/rules/xhttps-proxy.md"};function p(n,t,h,l,i,x){return s(),a("div",null,t[0]||(t[0]=[r('<h1 id="xhttps-proxy" tabindex="-1">xhttps-proxy <a class="header-anchor" href="#xhttps-proxy" aria-label="Permalink to &quot;xhttps-proxy&quot;">​</a></h1><p>xhttps-proxy is a pass-through version of the <a href="./https-proxy.html">https-proxy</a> rule. The main difference lies in how it handles connection failures to the target proxy:</p><ul><li>✅ When a connection is established successfully: Behaves the same as the <a href="./https-proxy.html">https-proxy</a> rule</li><li>❌ When a connection fails: Ignore the matching rule and continue the normal network request (while <a href="./https-proxy.html">https-proxy</a> aborts the request).</li></ul><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern xhttps-proxy://value [filters...]</span></span></code></pre></div><p>For detailed usage, see <a href="./https-proxy.html">https-proxy</a></p>',6)]))}const u=e(o,[["render",p]]);export{d as __pageData,u as default};
