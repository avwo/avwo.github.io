import{_ as e,c as a,o as s,ag as n}from"./chunks/framework.Bw-5EFTY.js";const m=JSON.parse('{"title":"method","description":"","frontmatter":{},"headers":[],"relativePath":"en/docs/rules/method.md","filePath":"en/docs/rules/method.md"}'),o={name:"en/docs/rules/method.md"};function d(i,t,r,p,l,h){return s(),a("div",null,t[0]||(t[0]=[n('<h1 id="method" tabindex="-1">method <a class="header-anchor" href="#method" aria-label="Permalink to &quot;method&quot;">​</a></h1><p>Modify the request method.</p><h2 id="rule-syntax" tabindex="-1">Rule Syntax <a class="header-anchor" href="#rule-syntax" aria-label="Permalink to &quot;Rule Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern method://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Parameters</th><th>Description</th><th>Detailed Documentation</th></tr></thead><tbody><tr><td>pattern</td><td>Expression to match the request URL</td><td><a href="./pattern.html">Match Pattern Documentation</a></td></tr><tr><td>value</td><td>Request method name such as <code>get</code>/<code>post</code>/<code>head</code> (case-insensitive)</td><td></td></tr><tr><td>filters</td><td>Optional filters, supporting matching: <br>• Request URL/Method/Header/Content <br>• Response Status Code/Header</td><td><a href="./filters.html">Filter Documentation</a></td></tr></tbody></table><h2 id="configuration-example" tabindex="-1">Configuration Example <a class="header-anchor" href="#configuration-example" aria-label="Permalink to &quot;Configuration Example&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Visit `https://www.example.com/path/to` and see the request method as `POST` on the Whistle packet capture interface.</span></span>\n<span class="line"><span>www.example.com/path method://post</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Modify a method with a filter</span></span>\n<span class="line"><span>www.example.com/path2 method://patch includeFilter://reqH.content-type=multipart/form-data</span></span></code></pre></div>',7)]))}const u=e(o,[["render",d]]);export{m as __pageData,u as default};
