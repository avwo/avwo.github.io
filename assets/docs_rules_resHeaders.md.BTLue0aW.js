import{_ as e,c as s,o as t,ae as n}from"./chunks/framework.Dgg8-8ov.js";const x=JSON.parse('{"title":"resHeaders","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/resHeaders.md","filePath":"docs/rules/resHeaders.md"}'),p={name:"docs/rules/resHeaders.md"};function l(i,a,r,d,o,h){return t(),s("div",null,a[0]||(a[0]=[n(`<h1 id="resheaders" tabindex="-1">resHeaders <a class="header-anchor" href="#resheaders" aria-label="Permalink to &quot;resHeaders&quot;">​</a></h1><p>动态修改响应头部信息，支持多种数据源和批量操作方式。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern resHeaders://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>操作数据对象，支持从以下渠道获取：<br>• 目录/文件路径<br>• 远程 URL<br>• 内联/内嵌/Values内容</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><h4 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path resHeaders://x-proxy=Whistle</span></span></code></pre></div><p>访问 <code>https://www.example.com/path/to</code> 新增响应头：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>x-proxy: Whistle</span></span></code></pre></div><h4 id="设置多个响应头" tabindex="-1">设置多个响应头 <a class="header-anchor" href="#设置多个响应头" aria-label="Permalink to &quot;设置多个响应头&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`\`\` test.json</span></span>
<span class="line"><span>x-test1: 1</span></span>
<span class="line"><span>x-test2:</span></span>
<span class="line"><span>x-test3: abc</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>www.example.com/path2 resHeaders://{test.json}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 等价于：www.example.com/path2 resHeaders://x-test1=1&amp;x-test2=&amp;x-test3=abc</span></span></code></pre></div><p>访问 <code>https://www.example.com/path2/to</code> 在 Whistle Network 或后台服务器可以看到新增响应头：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>x-test1: 1</span></span>
<span class="line"><span>x-test2: </span></span>
<span class="line"><span>x-test3: abc</span></span></code></pre></div><h4 id="本地-远程资源" tabindex="-1">本地/远程资源 <a class="header-anchor" href="#本地-远程资源" aria-label="Permalink to &quot;本地/远程资源&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path1 resHeaders:///User/xxx/test.json</span></span>
<span class="line"><span>www.example.com/path2 resHeaders://https://www.xxx.com/xxx/params.json</span></span>
<span class="line"><span># 通过编辑临时文件</span></span>
<span class="line"><span>www.example.com/path3 resHeaders://temp/blank.json</span></span></code></pre></div><h2 id="关联协议" tabindex="-1">关联协议 <a class="header-anchor" href="#关联协议" aria-label="Permalink to &quot;关联协议&quot;">​</a></h2><ol><li>更灵活的修改响应头的方式：<a href="./headerReplace.html">headerReplace</a></li><li>删除响应头字段：<a href="./delete.html">delete://resHeaders.xxx</a></li></ol>`,18)]))}const b=e(p,[["render",l]]);export{x as __pageData,b as default};
