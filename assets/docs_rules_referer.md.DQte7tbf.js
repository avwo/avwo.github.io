import{_ as t,c as a,o as r,ag as s}from"./chunks/framework.Bw-5EFTY.js";const f=JSON.parse('{"title":"referer","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/referer.md","filePath":"docs/rules/referer.md"}'),d={name:"docs/rules/referer.md"};function l(o,e,i,n,h,c){return r(),a("div",null,e[0]||(e[0]=[s('<h1 id="referer" tabindex="-1">referer <a class="header-anchor" href="#referer" aria-label="Permalink to &quot;referer&quot;">​</a></h1><p>修改请求头的 <code>referer</code> 字段，有些服务器会校验请求头的 <code>referer</code> 字段，这个协议可以用来绕过这个检测或者测试后台的功能。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern referer://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>完整 URL 链接<br>• 内联/内嵌/Values内容<br>⚠️ 不支持从文件/远程 URL 加载数据</td><td></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path referer://https://www.test.com/x/y/z?xxx</span></span></code></pre></div><h2 id="关联协议" tabindex="-1">关联协议 <a class="header-anchor" href="#关联协议" aria-label="Permalink to &quot;关联协议&quot;">​</a></h2><ol><li>等价于：<a href="./reqHeaders.html">reqHeaders://referer=https://xxx</a></li></ol>',9)]))}const u=t(d,[["render",l]]);export{f as __pageData,u as default};
