import{_ as t,a as s}from"./chunks/url-params2.CikVPoey.js";import{_ as e,c as p,o as n,ae as l}from"./chunks/framework.Dgg8-8ov.js";const b=JSON.parse('{"title":"urlParams","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/urlParams.md","filePath":"docs/rules/urlParams.md"}'),r={name:"docs/rules/urlParams.md"};function o(i,a,d,c,h,m){return n(),p("div",null,a[0]||(a[0]=[l('<h1 id="urlparams" tabindex="-1">urlParams <a class="header-anchor" href="#urlparams" aria-label="Permalink to &quot;urlParams&quot;">​</a></h1><p>动态修改请求 URL 的查询参数，支持多种参数注入方式。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern urlParams://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>操作数据对象，支持从以下渠道获取：<br>• 目录/文件路径<br>• 远程 URL<br>• 内联/内嵌/Values内容</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path urlParams://test=123</span></span></code></pre></div><p>访问 <code>https://www.example.com/path/to</code> 服务器收到的 URL：<code>https://www.example.com/path/to?test=123</code></p><img src="'+t+'" width="360"><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>``` test.json</span></span>\n<span class="line"><span>test1: 1</span></span>\n<span class="line"><span>test2:</span></span>\n<span class="line"><span>test3: 3</span></span>\n<span class="line"><span>```</span></span>\n<span class="line"><span>www.example.com/path2 urlParams://{test.json}</span></span></code></pre></div><p>访问 <code>https://www.example.com/path2/to</code> 服务器收到的 URL：<code>https://www.example.com/path2?test1=1&amp;test2=&amp;test3=3</code></p><img src="'+s+`" width="360"><h4 id="本地-远程资源" tabindex="-1">本地/远程资源 <a class="header-anchor" href="#本地-远程资源" aria-label="Permalink to &quot;本地/远程资源&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path1 urlParams:///User/xxx/test.json</span></span>
<span class="line"><span>www.example.com/path2 urlParams://https://www.xxx.com/xxx/params.json</span></span>
<span class="line"><span># 通过编辑临时文件</span></span>
<span class="line"><span>www.example.com/path3 urlParams://temp/blank.json</span></span></code></pre></div><h2 id="关联协议" tabindex="-1">关联协议 <a class="header-anchor" href="#关联协议" aria-label="Permalink to &quot;关联协议&quot;">​</a></h2><ol><li>更灵活的修改请求参数的方式：<a href="./pathReplace.html">pathReplace</a></li><li>删除请求参数：<a href="./delete.html">delete://urlParams.xxx</a></li></ol>`,16)]))}const w=e(r,[["render",o]]);export{b as __pageData,w as default};
