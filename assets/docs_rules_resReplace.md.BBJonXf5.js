import{_ as e,c as s,o as t,ag as n}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"resReplace","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/resReplace.md","filePath":"docs/rules/resReplace.md"}'),p={name:"docs/rules/resReplace.md"};function l(i,a,c,r,o,d){return t(),s("div",null,a[0]||(a[0]=[n(`<h1 id="resreplace" tabindex="-1">resReplace <a class="header-anchor" href="#resreplace" aria-label="Permalink to &quot;resReplace&quot;">​</a></h1><p>使用类似 JavaScript <code>String.replace()</code> 的方法替换响应体内容（仅对包含响应内容体的请求有效，如 <code>200</code>、<code>500</code> 等），支持多种文本格式：</p><ul><li>JSON (<code>application/json</code>)</li><li>XML (<code>application/xml</code>)</li><li>HTML (<code>text/html</code>)</li><li>纯文本 (<code>text/xxx</code>)</li></ul><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern resReplace://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>替换配置对象，支持从以下渠道获取：<br>• 目录/文件路径<br>• 远程 URL<br>• 内联/内嵌/Values内容</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="配置示例" tabindex="-1">配置示例 <a class="header-anchor" href="#配置示例" aria-label="Permalink to &quot;配置示例&quot;">​</a></h2><h4 id="内联方式" tabindex="-1">内联方式 <a class="header-anchor" href="#内联方式" aria-label="Permalink to &quot;内联方式&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path file://(00user-11test-22user-33test) resReplace://user=abc&amp;/\\d+/g=number</span></span></code></pre></div><p>请求 <code>https://www.example.com/path/to</code> 浏览器收到的内容：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>numberabc-numbertest-numberabc-numbertest</span></span></code></pre></div><h3 id="内嵌模式" tabindex="-1">内嵌模式 <a class="header-anchor" href="#内嵌模式" aria-label="Permalink to &quot;内嵌模式&quot;">​</a></h3><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`\`\` resReplace.json</span></span>
<span class="line"><span>user: name</span></span>
<span class="line"><span>/\\d+/g: num</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span># 或（注意转义符）</span></span>
<span class="line"><span>\`\`\` resReplace.json</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &#39;user&#39;: &#39;name&#39;,</span></span>
<span class="line"><span>  &#39;/\\\\d+/g&#39;: &#39;num&#39;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>www.example.com/path file://(00user-11test-22user-33test) resReplace://{resReplace.json}</span></span></code></pre></div><p>请求 <code>https://www.example.com/path/to</code> 浏览器收到的内容：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>numname-numtest-numname-numtest</span></span></code></pre></div><h4 id="本地-远程资源" tabindex="-1">本地/远程资源 <a class="header-anchor" href="#本地-远程资源" aria-label="Permalink to &quot;本地/远程资源&quot;">​</a></h4><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>www.example.com/path1 resReplace:///User/xxx/test.json</span></span>
<span class="line"><span>www.example.com/path2 resReplace://https://www.xxx.com/xxx/params.json</span></span>
<span class="line"><span># 通过编辑临时文件</span></span>
<span class="line"><span>www.example.com/path3 resReplace://temp/blank.json</span></span></code></pre></div><h2 id="关联协议" tabindex="-1">关联协议 <a class="header-anchor" href="#关联协议" aria-label="Permalink to &quot;关联协议&quot;">​</a></h2><ol><li>对象合并：<a href="./resMerge.html">resMerge</a></li><li>完全替换：<a href="./resBody.html">resBody</a></li></ol>`,19)]))}const m=e(p,[["render",l]]);export{u as __pageData,m as default};
