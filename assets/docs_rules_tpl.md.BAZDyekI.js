import{_ as n,c as p,o as i,ae as e,j as a,a as s,t as d}from"./chunks/framework.Dgg8-8ov.js";const m=JSON.parse('{"title":"tpl","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rules/tpl.md","filePath":"docs/rules/tpl.md"}'),o={name:"docs/rules/tpl.md"};function r(l,t,h,c,u,b){return i(),p("div",null,[t[4]||(t[4]=e('<h1 id="tpl" tabindex="-1">tpl <a class="header-anchor" href="#tpl" aria-label="Permalink to &quot;tpl&quot;">​</a></h1><p>tpl 是基于 <a href="./file.html">file</a> 功能的增强版本，提供了简单的模板引擎功能。</p><h2 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pattern tpl://value [filters...]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>详细文档</th></tr></thead><tbody><tr><td>pattern</td><td>匹配请求 URL 的表达式</td><td><a href="./pattern.html">匹配模式文档</a></td></tr><tr><td>value</td><td>操作内容，支持以下类型：<br>• 目录/文件路径<br>• 远程 URL<br>• 内联/内嵌/Values内容</td><td><a href="./operation.html">操作指令文档</a></td></tr><tr><td>filters</td><td>可选过滤器，支持匹配：<br>• 请求URL/方法/头部/内容<br>• 响应状态码/头部</td><td><a href="./filters.html">过滤器文档</a></td></tr></tbody></table><h2 id="模板规则" tabindex="-1">模板规则 <a class="header-anchor" href="#模板规则" aria-label="Permalink to &quot;模板规则&quot;">​</a></h2>',6)),a("ol",null,[a("li",null,[t[0]||(t[0]=s("取值方式：")),t[1]||(t[1]=a("code",null,"{key}",-1)),t[2]||(t[2]=s(" 或 ")),a("code",null,d(l.key),1)]),t[3]||(t[3]=a("li",null,[a("code",null,"key"),s("：为请求参数里面的属性")],-1))]),t[5]||(t[5]=e(`<h2 id="mock-jsonp" tabindex="-1">Mock JSONP <a class="header-anchor" href="#mock-jsonp" aria-label="Permalink to &quot;Mock JSONP&quot;">​</a></h2><ol><li>本地文件 <code>/User/xxx/test.js</code><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{callback}({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ec: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div></li><li>配置规则<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.example.com/test/tpl tpl:///User/xxx/test.js</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 支持远程 URL</span></span>
<span class="line"><span># pattern tpl://https://example.com/template</span></span></code></pre></div></li><li>请求 <code>https://www.example.com/test/tpl?callback=test</code> 返回结果：<div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>test({</span></span>
<span class="line"><span>  ec: 0</span></span>
<span class="line"><span>});</span></span></code></pre></div></li></ol><p>其它功能参考：<a href="./file.html">file</a></p>`,3))])}const g=n(o,[["render",r]]);export{m as __pageData,g as default};
